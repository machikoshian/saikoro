{"version":3,"sources":["webpack:///webpack/bootstrap a566f6bac2a3dc8ff96a","webpack:///./src/facility.ts","webpack:///./src/protocol.ts","webpack:///./src/session.ts","webpack:///./src/client.ts","webpack:///./src/board.ts","webpack:///./src/storage.ts","webpack:///./src/utils.ts","webpack:///./src/saikoro.ts","webpack:///./src/standalone_connection.ts","webpack:///./src/auto_play.ts","webpack:///./src/card_manager.ts","webpack:///./src/deck_maker.ts","webpack:///./src/dice.ts","webpack:///./src/html_view.ts","webpack:///./src/html_view_parts.ts","webpack:///./src/saikoro_client_standalone.ts","webpack:///./src/session_handler.ts"],"names":[],"mappings":"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","file":"./out/standalone/saikoro_client.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a566f6bac2a3dc8ff96a","export enum CharacterType {\n    None,\n    DiceDelta,  // Add N to dice results.\n    DrawCards,  // Draw cards from talon.\n    SalaryFactor,  // Multiply the salary.\n}\n\nexport class CharacterData {\n    constructor(\n        readonly id: number,  // Unique number.\n        readonly name: string,\n        readonly type: CharacterType,\n        readonly round: number,\n        readonly property: {},\n    ) {}\n}\n\nconst CHARACTER_DATA_BASE: number = 1000;\nconst CHARACTER_DATA: CharacterData[] = [\n    new CharacterData(1000, \"大学生\",  CharacterType.DiceDelta, 1, {\"delta\": 3}),\n    new CharacterData(1001, \"幼稚園児\", CharacterType.DiceDelta, 2, {\"delta\": -2}),\n    new CharacterData(1002, \"執事\",   CharacterType.DrawCards, 0, {\"value\": 2}),\n];\n\nexport type CardDataId = number;\n\nexport enum FacilityType {\n    Gray,\n    Blue,\n    Green,\n    Red,\n    Purple,\n}\n\nexport class FacilityData {\n    constructor(\n        readonly id: number,  // Unique number.\n        readonly size: number,\n        readonly area: number[],  // TODO should be range.\n        readonly name: string,\n        readonly cost: number,\n        readonly type: FacilityType,\n        readonly property: {},\n        ) {}\n}\n\nconst FACILITY_DATA: FacilityData[] = [\n    new FacilityData(0,  1, [1],    \"🌾\", 100, FacilityType.Blue,   {\"value\": 300}),\n    new FacilityData(1,  1, [2],    \"🐮\", 100, FacilityType.Blue,   {\"value\": 250}),\n    new FacilityData(2,  2, [3],    \"👾\", 200, FacilityType.Purple, {\"value\": 300}),\n    new FacilityData(3,  1, [4],    \"🐝\", 200, FacilityType.Blue,   {\"value\": 300}),\n    new FacilityData(4,  1, [5],    \"🍴\", 200, FacilityType.Red,    {\"value\": 400}),\n    new FacilityData(5,  1, [6],    \"💆\", 150, FacilityType.Green,  {\"value\": 450}),\n    new FacilityData(6,  1, [7],    \"👕\", 200, FacilityType.Green,  {\"value\": 400}),\n    new FacilityData(7,  1, [8],    \"🐔\", 250, FacilityType.Red,    {\"value\": 200, \"all\": true}),\n    new FacilityData(8,  1, [8,9],  \"🌻\", 200, FacilityType.Blue,   {\"value\": 400}),\n    new FacilityData(9,  1, [10],   \"🍣\", 100, FacilityType.Red,    {\"value\": 400}),\n    new FacilityData(10, 2, [10],   \"🗻\", 300, FacilityType.Blue,   {\"value\": 500}),\n    new FacilityData(11, 1, [12],   \"🍍\", 150, FacilityType.Blue,   {\"value\": 650}),\n\n    new FacilityData(12, 1, [1],  \"🍣\", 200, FacilityType.Red,    {\"value\": 600}),\n    new FacilityData(13, 1, [2],  \"🐟\", 100, FacilityType.Green,  {\"value\": 550}),\n    new FacilityData(14, 1, [3],  \"💈\", 100, FacilityType.Green,  {\"value\": 450}),\n    new FacilityData(15, 1, [4],  \"📖\", 200, FacilityType.Green,  {\"value\": 400}),\n    new FacilityData(16, 1, [5],  \"📰\", 100, FacilityType.Purple, {\"value\": 300}),\n    new FacilityData(17, 1, [6],  \"🍱\", 100, FacilityType.Red,    {\"value\": 300}),\n    new FacilityData(18, 1, [7],  \"🍕\", 100, FacilityType.Red,    {\"value\": 300}),\n    new FacilityData(19, 1, [8],  \"🍅\", 100, FacilityType.Blue,   {\"value\": 250}),\n    new FacilityData(20, 1, [9],  \"🚗\", 400, FacilityType.Green,  {\"value\": 800}),\n    new FacilityData(21, 1, [10], \"🍎\", 100, FacilityType.Blue,   {\"value\": 350}),\n    new FacilityData(22, 1, [11], \"👓\", 100, FacilityType.Green,  {\"value\": 1000}),\n    new FacilityData(23, 1, [12], \"🔨\", 300, FacilityType.Purple, {\"value\": 2000}),\n\n    new FacilityData(24, 2, [8], \"🍻\", 300, FacilityType.Red,    {\"value\": 100, \"all\": true}),\n    new FacilityData(25, 2, [8], \"🎥\", 300, FacilityType.Purple, {\"value\": 200, \"all\": true}),\n    new FacilityData(26, 2, [9], \"🐬\", 500, FacilityType.Purple, {\"value\": 300, \"all\": true}),\n];\n\nconst LANDMARK_DATA_BASE: number = 10000;\nconst LANDMARK_DATA: FacilityData[] = [\n    new FacilityData(10000, 2, [], \"🏯\", 2500, FacilityType.Gray, {}),\n    new FacilityData(10001, 1, [], \"🏰\", 2500, FacilityType.Gray, {}),\n];\n\nexport class CardData {\n    static isFacility(data_id: number): boolean {\n        return (0 <= data_id) && (data_id < FACILITY_DATA.length);\n    }\n    static getRandomFacilityDataId(): CardDataId {\n        return Math.floor(Math.random() * FACILITY_DATA.length);\n    }\n\n    static getAvailableFacilities(pip: number): CardDataId[] {\n        let facilities: CardDataId[] = [];\n        for (let i: number = 0; i < FACILITY_DATA.length; ++i) {\n            let facility: FacilityData = FACILITY_DATA[i];\n            for (let s: number = 0; s < facility.size; ++s) {\n                if (facility.area.indexOf(pip - s) !== -1) {\n                    facilities.push(i);\n                    break;\n                }\n            }\n        }\n        return facilities;\n    }\n\n    static isCharacter(data_id: number): boolean {\n        return ((CHARACTER_DATA_BASE <= data_id) &&\n                (data_id < CHARACTER_DATA_BASE + CHARACTER_DATA.length));\n    }\n    static getRandomCharacterDataId(): CardDataId {\n        return Math.floor(Math.random() * CHARACTER_DATA.length) + CHARACTER_DATA_BASE;\n    }\n\n    static getAvailableCharacters(): CardDataId[] {\n        let data_ids: CardDataId[] = [];\n        for (let i: number = 0; i < CHARACTER_DATA.length; ++i) {\n            data_ids.push(CHARACTER_DATA_BASE + i);\n        }\n        return data_ids;\n    }\n}\n\nexport type CardId = number;\n\nexport class Facility {\n    readonly data_id: CardDataId;\n    readonly name: string;\n    readonly size: number;\n    readonly area: number[];\n    readonly cost: number;\n    readonly type: FacilityType;\n    readonly property: {};\n\n    constructor(data_id: CardDataId) {\n        let data: FacilityData;\n        if (data_id >= LANDMARK_DATA_BASE) {\n            data = LANDMARK_DATA[data_id - LANDMARK_DATA_BASE];\n        }\n        else {\n            data = FACILITY_DATA[data_id];\n        }\n        this.data_id = data_id;\n        this.name = data.name;\n        this.size = data.size;\n        this.area = data.area;\n        this.cost = data.cost;\n        this.type = data.type;\n        this.property = data.property;\n    }\n\n    public toJSON(): Object {\n        return {\n            class_name: \"Facility\",\n            data_id: this.data_id,\n        }\n    }\n\n    static fromJSON(json) {\n        return new Facility(json.data_id);\n    }\n\n    public getName(): string {\n        return this.name;\n    }\n    public getSize(): number {\n        return this.size;\n    }\n    public getArea(): number[] {\n        return this.area;\n    }\n    public getCost(): number {\n        return this.cost;\n    }\n    public getType(): FacilityType {\n        return this.type;\n    }\n    public getPropertyValue(): number {\n        return this.property[\"value\"] ? this.property[\"value\"] : 0;\n    }\n    public getDescription(): string {\n        switch (this.type) {\n            case FacilityType.Gray:\n                return \"ランドマーク\";\n            case FacilityType.Blue:\n                return `${this.property[\"value\"]}コイン稼ぐ\\n誰のターンでも`;\n            case FacilityType.Green:\n                return `${this.property[\"value\"]}コイン稼ぐ\\n自分のターンのみ`;\n            case FacilityType.Red:\n                if (this.property[\"all\"]) {\n                    return `${this.property[\"value\"]}コインを全員から奪う\\n自分以外のターンのみ`;\n                }\n                else {\n                    return `${this.property[\"value\"]}コイン奪う\\n自分以外のターンのみ`;\n                }\n            case FacilityType.Purple:\n                if (this.property[\"all\"]) {\n                    return `${this.property[\"value\"]}コインを全員から奪う\\n自分のターンのみ`;\n                }\n                else {\n                    return `${this.property[\"value\"]}コイン奪う\\n自分のターンのみ`;\n                }\n        }\n        return \"\";\n    }\n\n}\n\nexport class Character {\n    readonly data_id: CardDataId;\n    readonly name: string;\n    readonly type: CharacterType;\n    readonly round: number;\n    readonly property: {};\n\n    constructor(data_id: CardDataId) {\n        let data: CharacterData = CHARACTER_DATA[data_id - CHARACTER_DATA_BASE];\n        this.data_id = data_id;\n        this.name = data.name;\n        this.type = data.type;\n        this.round = data.round;\n        this.property = data.property;\n    }\n\n    public toJSON(): Object {\n        return {\n            class_name: \"Character\",\n            data_id: this.data_id,\n        }\n    }\n\n    static fromJSON(json) {\n        return new Character(json.data_id);\n    }\n\n    public getName(): string {\n        return this.name;\n    }\n    public getType(): CharacterType {\n        return this.type;\n    }\n    public getPropertyValue(): number {\n        return this.property[\"value\"] ? this.property[\"value\"] : 0;\n    }\n    public getDescription(): string {\n        switch (this.type) {\n            case CharacterType.None:\n                return \"\";\n            case CharacterType.DiceDelta:\n                let delta: number = this.property[\"delta\"];\n                let delta_str: string = ((delta > 0) ? \"+\" : \"\") + delta;\n                return `サイコロの目を${delta_str}する\\n${this.round}ラウンド`;\n            case CharacterType.DrawCards:\n                let value: number = this.property[\"value\"];\n                return `山札からカードを${value}枚引く`;\n        }\n        return \"\";\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/facility.ts","export enum GameMode {\n    None,\n    OffLine_2,\n    OffLine_3,\n    OffLine_4,\n    OnLineSingle_2,\n    OnLineSingle_3,\n    OnLineSingle_4,\n    OnLine2Players,\n    OnLineWatch,\n};\n\nexport interface MatchingPlayerInfo {\n    user_id: string,\n    mode: GameMode,\n    name: string,\n    deck: number[],\n}\n\nexport interface MatchingInfo {\n    mode: GameMode,\n    session_id: number,\n    player_names: string[],\n    is_matched: boolean,\n}\n\nexport enum StampId {\n    None,\n    Hello,\n    Doki,\n    Sugoi,\n    Otsukare,\n}\n\nexport interface ChatMessage {\n    session_id: number,\n    user_id: string,\n    stamp_id: StampId,\n    timestamp: number,\n}\n\nexport class Protocol {\n    static isOnlineMode(mode: GameMode): boolean {\n        const onlines: GameMode[] = [\n            GameMode.OnLineSingle_2, GameMode.OnLineSingle_3, GameMode.OnLineSingle_4,\n            GameMode.OnLine2Players, GameMode.OnLineWatch ];\n        return (onlines.indexOf(mode) !== -1);\n    }\n\n    static getGameModeName(mode: GameMode): string {\n        switch (mode) {\n            case GameMode.OffLine_2:\n                return \"2人バトル 😺 👻\";\n            case GameMode.OffLine_3:\n                return \"3人バトル 😺 👻 👾\";\n            case GameMode.OffLine_4:\n                return \"4人バトル 😺 👻 👾 🗿\";\n            case GameMode.OnLineSingle_2:\n                return \"2人バトル 😺 👻\";\n            case GameMode.OnLineSingle_3:\n                return \"3人バトル 😺 👻 👾\";\n            case GameMode.OnLineSingle_4:\n                return \"4人バトル 😺 👻 👾 🗿\";\n            case GameMode.OnLine2Players:\n                return \"2人バトル 😺 😺\";\n            case GameMode.OnLineWatch:\n                return \"観戦モード\";\n            case GameMode.None:\n                return \"\";\n            default:\n                return \"\";\n        }\n    }\n\n    static getNpcCount(mode: GameMode): number {\n        switch (mode) {\n            case GameMode.OffLine_2:\n            case GameMode.OnLineSingle_2:\n                return 1;\n            case GameMode.OffLine_3:\n            case GameMode.OnLineSingle_3:\n                return 2;\n            case GameMode.OffLine_4:\n            case GameMode.OnLineSingle_4:\n                return 3;\n            case GameMode.OnLine2Players:\n            case GameMode.OnLineWatch:\n                return 0;\n            case GameMode.None:\n            default:\n                return -1;\n        }\n    }\n\n    static getPlayerCount(mode: GameMode): number {\n        switch (mode) {\n            case GameMode.OffLine_2:\n            case GameMode.OnLineSingle_2:\n            case GameMode.OffLine_3:\n            case GameMode.OnLineSingle_3:\n            case GameMode.OffLine_4:\n            case GameMode.OnLineSingle_4:\n                return 1;\n            case GameMode.OnLine2Players:\n                return 2;\n            case GameMode.OnLineWatch:\n                return 0;\n            case GameMode.None:\n            default:\n                return -1;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/protocol.ts","import { Dice, DiceResult } from \"./dice\";\nimport { Player, Board, PlayerId } from \"./board\";\nimport { CardId, CardDataId, FacilityType, Facility,\n         Character, CharacterData, CharacterType } from \"./facility\";\nimport { shuffle } from \"./utils\";\nimport { CardManager, EffectManager, PlayerCards } from \"./card_manager\";\n\nexport enum Phase {\n    StartGame,\n    // Loop b/w StartTurn and EndTurn.\n    StartTurn,  // Draw a card.\n    CharacterCard,\n    DiceRoll,\n    // DiceRollAgain,\n    FacilityAction,  // Blue and Greeen\n    FacilityActionRed,\n    FacilityActionPurple,\n    FacilityActionWithInteraction,\n    // FacilityAction2,\n    // FacilityAction3,\n    // FacilityAction4,\n    // FacilityAction5,\n    PaySalary,\n    BuildFacility,\n    CardRemoval,\n    EndTurn,\n    EndGame,\n}\n\nexport enum EventType {\n    None,\n    Draw,\n    Character,\n    Dice,\n    Blue,\n    Green,\n    Red,\n    Purple,\n    Build,\n    Salary,\n    Interaction,\n    Quit,\n}\n\nexport class Event {\n    public step: number = 0;\n    public type: EventType = EventType.None;\n    public player_id: PlayerId = -1;\n    public moneys: number[] = [0, 0, 0, 0];\n    public card_id: CardId = null;\n    public target_card_ids: CardId[] = [];\n    public dice: DiceResult = null;\n    public valid: boolean = false;\n\n    public toJSON(): Object {\n        return {\n            class_name: \"Event\",\n            step: this.step,\n            type: this.type,\n            player_id: this.player_id,\n            moneys: this.moneys,\n            card_id: this.card_id,\n            target_card_ids: this.target_card_ids,\n            dice: this.dice ? this.dice.toJSON() : null,\n            valid: this.valid,\n        }\n    }\n\n    static fromJSON(json): Event {\n        let event = new Event();\n        event.step = json.step;\n        event.type = json.type;\n        event.player_id = json.player_id;\n        event.moneys = json.moneys;\n        event.card_id = json.card_id;\n        event.target_card_ids = json.target_card_ids;\n        event.dice = json.dice ? DiceResult.fromJSON(json.dice) : null;\n        event.valid = json.valid;\n        return event;\n    }\n}\n\nexport class Session {\n    private board: Board;\n    private players: Player[];\n    private card_manager: CardManager;\n    private effect_manager: EffectManager;\n    private events: Event[];\n    private step: number;  // Server starts from 1. Client starts from 0.\n    private phase: Phase;\n    private round: number;\n    private turn: number;\n    private current_player_id: PlayerId;\n    private winner: PlayerId;\n    private target_facilities: CardId[];\n    private dice_result: DiceResult;  // TODO: change it to Events.\n    private watcher_user_ids: string[] = [];\n\n    constructor(readonly session_id: number = -1) {\n        this.board = new Board();\n        this.players = [];\n        this.card_manager = new CardManager();\n        this.effect_manager = new EffectManager();\n        this.events = [];\n        this.step = 1;\n        this.phase = Phase.StartGame;\n        this.round = 0;\n        this.turn = 0;\n        this.current_player_id = 0;\n        this.winner = -1;  // NO_PLAYER\n        this.target_facilities = [];\n        this.dice_result = null;\n    }\n\n    public toJSON(): Object {\n        return {\n            class_name: \"Session\",\n            session_id: this.session_id,\n            board: this.board.toJSON(),\n            players: this.players.map(player => { return player.toJSON(); }),\n            card_manager: this.card_manager.toJSON(),\n            effect_manager: this.effect_manager.toJSON(),\n            events: this.events.map(event => { return event.toJSON(); }),\n            step: this.step,\n            phase: this.phase,\n            round: this.round,\n            turn: this.turn,\n            current_player_id: this.current_player_id,\n            winner: this.winner,\n            target_facilities: this.target_facilities,\n            dice_result: this.dice_result ? this.dice_result.toJSON() : null,\n            watcher_user_ids: this.watcher_user_ids,\n        };\n    }\n\n    static fromJSON(json): Session {\n        let board: Board = Board.fromJSON(json.board);\n        let players: Player[] = json.players.map(player => { return Player.fromJSON(player); });\n        let session: Session = new Session(json.session_id);\n        session.board = board;\n        session.players = players;\n        session.card_manager = CardManager.fromJSON(json.card_manager);\n        session.effect_manager = EffectManager.fromJSON(json.effect_manager);\n        session.events = json.events.map(event => { return Event.fromJSON(event); });\n        session.step = json.step,\n        session.phase = json.phase,\n        session.round = json.round;\n        session.turn = json.turn;\n        session.current_player_id = json.current_player_id;\n        session.winner = json.winner;\n        session.target_facilities = json.target_facilities;\n        session.dice_result = json.dice_result ? DiceResult.fromJSON(json.dice_result) : null;\n        session.watcher_user_ids = json.watcher_user_ids;\n        return session;\n    }\n\n    public isValidPhase(phase: Phase): boolean {\n        if (this.phase === phase) {\n            return true;\n        }\n        // Character card can be skipped.\n        if (this.phase === Phase.CharacterCard && phase === Phase.DiceRoll) {\n            return true;\n        }\n        return false;\n    }\n\n    public done(phase: Phase): void {\n        if (!this.isValidPhase(phase) || this.phase === Phase.EndGame) {\n            return;\n        }\n        this.step++;\n        switch(phase) {\n            case Phase.StartGame:\n                this.phase = Phase.StartTurn;\n                return;\n\n            case Phase.StartTurn:\n                this.phase = Phase.CharacterCard;\n                return;\n\n            case Phase.CharacterCard:\n                this.phase = Phase.DiceRoll;\n                return;\n\n            case Phase.DiceRoll:\n                this.phase = Phase.FacilityAction;\n                return;\n\n            case Phase.FacilityAction:\n                this.phase = Phase.FacilityActionRed;\n                return;\n\n            case Phase.FacilityActionRed:\n                this.phase = Phase.FacilityActionPurple;\n                return;\n\n            case Phase.FacilityActionPurple:\n                if (this.target_facilities.length === 0) {\n                    this.phase = Phase.PaySalary;\n                    return;\n                }\n                this.phase = Phase.FacilityActionWithInteraction;\n                return;\n\n            case Phase.FacilityActionWithInteraction:\n                if (this.target_facilities.length > 0) {\n                    // If target_facilities remains, go back to the previous step.\n                    this.phase = Phase.FacilityActionPurple;\n                    return;\n                }\n                this.phase = Phase.PaySalary;\n                return;\n\n            case Phase.PaySalary:\n                this.phase = Phase.BuildFacility;\n                return;\n\n            case Phase.BuildFacility:\n                // Check EndGame\n                let landmarks: CardId[] = this.card_manager.getLandmarks();\n                let num_landmarks: number = 0;\n                for (let landmark of landmarks) {\n                    if (this.card_manager.getOwner(landmark) === this.current_player_id) {\n                        num_landmarks++;\n                    }\n                }\n                // TODO: support multiple landmarks.\n                if (num_landmarks > 0) {\n                    this.winner = this.current_player_id;\n                    this.phase = Phase.EndGame;\n                    return;\n                }\n                this.phase = Phase.EndTurn;\n                return;\n\n            case Phase.EndTurn:\n                this.phase = Phase.StartTurn;\n                return;\n\n            case Phase.EndGame:\n                // Do nothing.\n                return;\n        }\n    }\n\n    public doNext(): boolean {\n        switch(this.phase) {\n            case Phase.StartGame:\n                return this.startGame();\n             case Phase.StartTurn:\n                return this.startTurn();\n            case Phase.CharacterCard:\n                return false;  // Need interactions.\n            case Phase.DiceRoll:\n                return false;  // Need interactions.\n            case Phase.FacilityAction:\n                return this.facilityAction(this.phase);\n            case Phase.FacilityActionRed:\n                return this.facilityAction(this.phase);\n            case Phase.FacilityActionPurple:\n                return this.facilityAction(this.phase);\n            case Phase.FacilityActionWithInteraction:\n                return false;\n            case Phase.PaySalary:\n                return this.paySalary();\n            case Phase.BuildFacility:\n                return false;  // Need interactions.\n            case Phase.EndTurn:\n                return this.endTurn();\n            case Phase.EndGame:\n                return this.endGame();\n        }\n        return false;\n    }\n\n    public addPlayer(user_id: string, name: string, money: number, salary: number,\n                     is_auto: boolean): number {\n        let player_id: PlayerId = this.players.length;\n        if (player_id > 4) {\n            return -1;\n        }\n        // team === player_id (no 2vs2 so far).\n        this.players.push(new Player(user_id, player_id, name, money, salary, player_id, is_auto));\n        return player_id;\n    }\n\n    public addFacility(player_id: PlayerId, facility_data_id: CardDataId): boolean {\n        return this.card_manager.addFacility(player_id, facility_data_id);\n    }\n\n    public addCharacter(player_id: PlayerId, character_data_id: CardDataId): boolean {\n        return this.card_manager.addCharacter(player_id, character_data_id);\n    }\n\n    public isValid(player_id: PlayerId, phase: Phase): boolean {\n        return (this.current_player_id === player_id && this.isValidPhase(phase));\n    }\n\n    public startGame(): boolean {\n        this.setLandmark();\n\n        for (let r: number = 0; r < 2; r++) {\n            for (let p: PlayerId = 0; p < this.players.length; p++) {\n                this.buildInitialFacility(p);\n            }\n        }\n\n        for (let r: number = 0; r < 5; r++) {\n            for (let p: PlayerId = 0; p < this.players.length; p++) {\n                this.getPlayerCards(p).dealToHand();\n            }\n        }\n        this.done(Phase.StartGame);\n        return true;\n    }\n\n    public startTurn(): boolean {\n        this.effect_manager.expire(this.round, this.turn);\n        let card_ids = this.drawCards(this.current_player_id, 1);\n\n        // This is a hack to avoid drawing an event before game start.\n        // TODO: Stop this hack.\n        let is_first: boolean = (this.round === 0 && this.turn === 0);\n        if (!is_first) {\n            let event: Event = new Event();\n            this.events.push(event);\n            event.type = EventType.Draw;\n            event.step = this.step;\n            event.player_id = this.current_player_id;\n            event.target_card_ids = card_ids;\n        }\n        this.done(Phase.StartTurn);\n        return true;\n    }\n\n    public diceRoll(player_id: PlayerId, dice_num: number, aim: number): boolean {\n        if (!this.isValid(player_id, Phase.DiceRoll)) {\n            return false;\n        }\n        let delta: number = this.effect_manager.getDiceDelta();\n        this.dice_result = Dice.roll(dice_num, aim, delta);\n\n        // TODO: Move this to other place?\n        this.target_facilities = this.getFacilitiesInArea(this.dice_result.result());\n\n        let event: Event = new Event();\n        this.events.push(event);\n        event.type = EventType.Dice;\n        event.dice = this.dice_result;\n        event.step = this.step;\n        event.player_id = player_id;\n        this.done(Phase.DiceRoll);\n        return true;\n    }\n\n    public interactFacilityAction(player_id: PlayerId, card_id: CardId,\n                                  target_id: PlayerId): boolean {\n        if (!this.isValid(player_id, Phase.FacilityActionWithInteraction)) {\n            return false;\n        }\n\n        if (this.target_facilities.length === 0) {\n            return false;\n        }\n\n        if (this.target_facilities[0] !== card_id) {\n            return false;\n        }\n\n        let event: Event = this.doFacilityActionWithTargetPlayer(card_id, target_id);\n        if (event.type === EventType.None) {\n            return false;\n        }\n\n        this.events.push(event);\n        this.target_facilities.shift();\n        this.done(Phase.FacilityActionWithInteraction);\n        return true;\n    }\n\n    public facilityAction(phase: Phase): boolean {\n        let number: number = this.dice_result.result();\n        let facility_types: FacilityType[] = [];\n        switch(phase) {\n            case Phase.FacilityAction:\n                facility_types = [FacilityType.Blue, FacilityType.Green];\n                break;\n            case Phase.FacilityActionRed:\n                facility_types = [FacilityType.Red];\n                break;\n            case Phase.FacilityActionPurple:\n            case Phase.FacilityActionWithInteraction:  // Only Purple has interactive facilities.\n                facility_types = [FacilityType.Purple];\n                break;\n        }\n\n        while (this.target_facilities.length > 0) {\n            let card_id: CardId = this.target_facilities[0];\n            let facility: Facility = this.getFacility(card_id);\n            if (facility_types.indexOf(facility.getType()) === -1) {\n                break;\n            }\n\n            let event: Event = this.doFacilityAction(card_id);\n            if (event.type !== EventType.None) {\n                this.events.push(event);\n            }\n            if (event.type === EventType.Interaction) {\n                // The facility requires user's interaction.\n                break;\n            }\n            this.target_facilities.shift();\n        }\n\n        this.done(phase);\n        return true;\n    }\n\n    public getFacilitiesInArea(area: number): CardId[] {\n        let x: number = area - 1;\n        let card_ids: CardId[] = [];\n        if (x < 0 || 11 < x) {\n            return card_ids;\n        }\n\n        let map_y: { [card_id: number]: number } = {};\n        for (let y: number = 0; y < 5; y++) {\n            let card_id: CardId = this.getCardIdOnBoard(x, y);\n            if (this.card_manager.isFacility(card_id)) {\n                card_ids.push(card_id);\n                map_y[card_id] = y;\n            }\n        }\n\n        return card_ids.sort((id1: CardId, id2: CardId) => {\n            let f1: Facility = this.getFacility(id1);\n            let f2: Facility = this.getFacility(id2);\n\n            // Blue < Green < Red < Purple\n            if (f1.getType() !== f2.getType()) {\n                return f1.getType() - f2.getType();\n            }\n\n            // TODO: change the order for Red.\n\n            // y4 < y3 < y2 < y1 < y0;\n            return map_y[id2] - map_y[id1];\n        });\n    }\n\n    public moveMoney(player_id_from: PlayerId, player_id_to: PlayerId, money: number): number {\n        if (player_id_from === player_id_to) {\n            return 0;\n        }\n        if (money < 0) {\n            return this.moveMoney(player_id_to, player_id_from, -money);\n        }\n        let actual: number = -(this.getPlayer(player_id_from).addMoney(-money));\n        this.getPlayer(player_id_to).addMoney(actual);\n        return actual;\n    }\n\n    public doFacilityActionWithTargetPlayer(card_id: CardId, target_id: PlayerId): Event {\n        let event: Event = new Event();\n        let facility: Facility = this.getFacility(card_id);\n        if (facility.getType() !== FacilityType.Purple) {\n            return event;\n        }\n\n        if (facility.property[\"all\"] === true) {\n            return event;\n        }\n\n        let player_id: PlayerId = this.getCurrentPlayerId();\n        let owner_id: PlayerId = this.getOwnerId(card_id);\n        if (player_id !== owner_id) {\n            return event;\n        }\n\n        let owner: Player = this.getOwner(card_id);\n        event.step = this.step;\n        event.card_id = card_id;\n        event.player_id = player_id;\n        event.type = EventType.Purple;\n\n        let value: number = facility.getPropertyValue();\n        let amount: number = this.moveMoney(target_id, owner_id, value);\n        event.moneys[target_id] -= amount;\n        event.moneys[owner_id] += amount;\n\n        return event;\n    }\n\n    public doFacilityAction(card_id: CardId): Event {\n        let facility: Facility = this.getFacility(card_id);\n        let player_id: PlayerId = this.getCurrentPlayerId();\n        let owner_id: PlayerId = this.getOwnerId(card_id);\n        let owner: Player = this.getOwner(card_id);\n        let event: Event = new Event();\n        event.step = this.step;\n        event.card_id = card_id;\n        event.player_id = player_id;\n\n        if (facility.getType() === FacilityType.Blue) {\n            let amount: number = owner.addMoney(facility.getPropertyValue());\n            event.type = EventType.Blue;\n            event.moneys[owner_id] += amount;\n        }\n        else if (facility.getType() === FacilityType.Green) {\n            if (player_id === owner_id) {\n                let amount: number = owner.addMoney(facility.getPropertyValue());\n                event.type = EventType.Green;\n                event.moneys[owner_id] += amount;\n            }\n        }\n        else if (facility.getType() === FacilityType.Red) {\n            if (player_id !== owner_id) {\n                let value: number = facility.getPropertyValue();\n                event.type = EventType.Red;\n                if (facility.property[\"all\"]) {\n                    for (let pid: number = 0; pid < this.players.length; ++pid) {\n                        if (pid === owner_id) {\n                            continue;\n                        }\n                        let amount: number = this.moveMoney(pid, owner_id, value);\n                        event.moneys[pid] -= amount;\n                        event.moneys[owner_id] += amount;\n                    }\n                }\n                else {\n                    let amount: number = this.moveMoney(player_id, owner_id, value);\n                    event.moneys[player_id] -= amount;\n                    event.moneys[owner_id] += amount;\n                }\n            }\n        }\n        else if (facility.getType() === FacilityType.Purple) {\n            if (player_id === owner_id) {\n                let value: number = facility.getPropertyValue();\n                if (facility.property[\"all\"] !== true) {  // TODO: Update the logic.\n                    event.type = EventType.Interaction;\n                }\n                else {\n                    event.type = EventType.Purple;\n                    for (let pid: number = 0; pid < this.players.length; ++pid) {\n                        if (pid === owner_id) {\n                            continue;\n                        }\n                        let amount: number = this.moveMoney(pid, owner_id, value);\n                        event.moneys[pid] -= amount;\n                        event.moneys[owner_id] += amount;\n                    }\n                }\n            }\n        }\n        return event;\n    }\n\n    private getOverwriteCosts(x: number, y: number, size: number): number[] {\n        let costs = [0, 0, 0, 0];\n        for (let card_id of this.getOverlappedFacilities(x, y, size)) {\n            let owner_id: PlayerId = this.getOwnerId(card_id);\n            if (owner_id === this.getCurrentPlayerId()) {\n                continue;\n            }\n\n            costs[owner_id] += this.getFacility(card_id).getCost() * 2;\n        }\n        return costs;\n    }\n\n    public availablePosition(card_id: CardId): [number, number][] {\n        let positions: [number, number][] = [];\n        let facility: Facility = this.card_manager.getFacility(card_id);\n        // TODO: support multiple x. (e.g. 7-9)\n        let area: number[] = facility.getArea();\n        let columns: number[];\n        if (area.length === 0) {\n            // area.length === 0 means anywhere.\n            columns = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].splice(0, 13 - facility.size);\n        }\n        else {\n            columns = area.map((x) => { return x - 1; });  // area is 1-origin.\n        }\n        for (let y: number = 0; y < this.board.row; y++) {\n            for (let x of columns) {\n                let available: boolean = true;\n                for (let s: number = 0; s < facility.size; ++s) {\n                    if (this.getCardIdOnBoard(x + s, y) !== -1) {\n                        available = false;\n                        break;\n                    }\n                }\n                if (available) {\n                    positions.push([x, y]);\n                }\n            }\n        }\n        return positions;\n    }\n\n    // Build a facility in the player's talon.\n    // No overwrite an existing facility or no exceed the cost of the player's money.\n    public buildInitialFacility(player_id: PlayerId) {\n        // Player ID is valid?\n        if (player_id >= this.players.length) {\n            return false;\n        }\n\n        let player: Player = this.getPlayer(player_id);\n        let card_id_list: CardId[] = shuffle(this.getPlayerCards(player_id).getTalon());\n\n        for (let card_id of card_id_list) {\n            if (this.isCharacter(card_id)) {\n                continue;\n            }\n            let facility: Facility = this.card_manager.getFacility(card_id);\n            let balance: number = player.getMoney() - facility.getCost();\n            if (balance < 0) {\n                continue;\n            }\n            let positions: [number, number][] = shuffle(this.availablePosition(card_id));\n            if (positions.length === 0) {\n                continue;\n            }\n\n            if (!this.card_manager.moveTalonToField(card_id)) {\n                // Something is wrong.\n                console.warn(`moveTalonToField(${card_id}) failed.`);\n                return false;\n            }\n\n            let [x, y] = positions[0];\n            this.board.setCardId(x, y, card_id, facility.size);\n            player.setMoney(balance);\n            return true;\n        }\n\n        return true;  // True is returned even if no facility was built.\n    }\n\n    public setLandmark(): boolean {  // Reserve the area for landmark.\n        const landmark_data_id: number = 10000;\n        let landmark: Facility = new Facility(landmark_data_id);\n        let landmark_id: CardId = this.card_manager.addLandmark(landmark);\n\n        let positions: [number, number][] = shuffle(this.availablePosition(landmark_id));\n        if (positions.length === 0) {\n            console.error(\"Landmark cannot be built.\");\n            return false;\n        }\n\n        let [x, y] = positions[0];\n        this.board.setCardId(x, y, landmark_id, landmark.size);\n        return true;\n    }\n\n    private drawCards(player_id: PlayerId, num_cards: number): CardId[] {\n        let card_ids: CardId[] = [];\n        for (let i: number = 0; i < num_cards; ++i) {\n            let drawn: CardId = this.getPlayerCards(player_id).dealToHand();\n            if (drawn === -1) {\n                break;\n            }\n            card_ids.push(drawn);\n        }\n        return card_ids;\n    }\n\n    public useCharacter(player_id: PlayerId, card_id: CardId): boolean {\n        if (!this.isValid(player_id, Phase.CharacterCard)) {\n            return false;\n        }\n\n        // Is character.\n        if (!this.isCharacter(card_id)) {\n            return false;\n        }\n\n        // Facility is in owner's hand?\n        if (!this.card_manager.isInHand(player_id, card_id)) {\n            return false;\n        }\n\n        // Add card to the effect manager.\n        let character: Character = this.card_manager.getCharacter(card_id);\n        let event: Event = new Event();\n        event.type = EventType.Character;\n        event.card_id = card_id;\n        event.step = this.step;\n        event.player_id = player_id;\n        this.events.push(event);\n\n        if (character.type === CharacterType.DrawCards) {\n            event.target_card_ids = this.drawCards(player_id, character.getPropertyValue());\n            event.player_id = player_id;\n        }\n        else {  // === CharacterType.DiceDelta\n            this.effect_manager.addCard(character.data_id, this.round, this.turn);\n        }\n\n        // Move the card to discard.\n        if (!this.card_manager.moveHandToDiscard(card_id)) {\n            // Something is wrong.\n            console.warn(`moveHandToDiscard(${card_id}) failed.`);\n            return false;\n        }\n\n        this.done(Phase.CharacterCard);\n        return true;\n    }\n\n    // TODO: move this function to Board?\n    public getOverlappedFacilities(x: number, y: number, size: number): CardId[] {\n        let card_ids: CardId[] = [];\n        let prev_id: CardId = -1;\n        for (let i: number = 0; i < size; ++i) {\n            let card_id: CardId = this.board.getCardId(x + i, y);\n            if (card_id === prev_id || card_id === -1) {\n                continue;\n            }\n            card_ids.push(card_id);\n            prev_id = card_id;\n        }\n        return card_ids;\n    }\n\n    public buildFacility(player_id: PlayerId, x: number, y: number,\n                         card_id: CardId): boolean {\n        // Facility is a landmark?\n        if (this.card_manager.isLandmark(card_id)) {\n            return this.buildLandmark(player_id, card_id);\n        }\n\n        let event: Event = this.getEventBuildFacility(player_id, x, y, card_id);\n        if (event == null || !event.valid) {\n            return false;\n        }\n        this.events.push(event);\n\n        // End turn, no build.\n        if (event.card_id === -1) {\n            this.done(Phase.BuildFacility);\n            return true;\n        }\n\n        let facility: Facility = this.getFacility(card_id);\n\n        // Update the data.\n        this.board.removeCards(x, y, facility.size);\n        for (let card_id_on_board of event.target_card_ids) {\n            // Delete the existing facility.\n            if (!this.card_manager.moveFieldToDiscard(card_id_on_board)) {\n                // Something is wrong.\n                console.warn(`moveFieldToDiscard(${card_id_on_board}) failed.`);\n                return false;\n            }\n        }\n\n        // Build the new facility.\n        if (!this.card_manager.moveHandToField(card_id)) {\n            // Something is wrong.\n            console.warn(`moveHandToField(${card_id}) failed.`);\n            return false;\n        }\n\n        this.board.setCardId(x, y, card_id, facility.size);\n        for (let i: number = 0; i < this.players.length; ++i) {\n            this.players[i].addMoney(event.moneys[i]);\n        }\n\n        this.done(Phase.BuildFacility);\n        return true;\n    }\n\n    public getEventBuildFacility(player_id: PlayerId, x: number, y: number,\n                                 card_id: CardId): Event {\n        // Facility is a landmark?\n        if (this.card_manager.isLandmark(card_id)) {\n            return this.getEventBuildLandmark(player_id, card_id);\n        }\n\n        // State is valid?\n        if (!this.isValid(player_id, Phase.BuildFacility)) {\n            return null;\n        }\n\n        let event: Event = new Event();\n        event.step = this.step;\n        event.type = EventType.Build;\n        event.player_id = player_id;\n\n        // Is pass?  (valid action, but not build a facility).\n        if (x === -1 && y === -1 && card_id === -1) {\n            event.card_id = -1;\n            event.valid = true;\n            return event;\n        }\n\n        // Facility is valid?\n        let facility: Facility = this.card_manager.getFacility(card_id);\n        if (!facility) {\n            return null;\n        }\n\n        // Facility is in owner's hand?\n        if (!this.card_manager.isInHand(player_id, card_id)) {\n            return null;\n        }\n\n        // Facility's owner is valid?\n        let facility_owner: PlayerId = this.getOwnerId(card_id);\n        if (facility_owner !== player_id) {\n            return null;\n        }\n\n        // Facility's area is valid?\n        let area: number = x + 1;\n        if (!this.card_manager.isInArea(area, card_id)) {\n            return null;\n        }\n\n        let overlapped: CardId[] = this.getOverlappedFacilities(x, y, facility.size);\n        for (let card_id_on_board of overlapped) {\n            // Facility on the board is overwritable?\n            if (!this.card_manager.canOverwrite(card_id_on_board)) {\n                return null;\n            }\n        }\n\n        // Money is valid?\n        let overwrite_costs: number[] = this.getOverwriteCosts(x, y, facility.size);\n        let total_cost: number = facility.cost;\n        for (let i: number = 0; i < overwrite_costs.length; ++i) {\n            total_cost += overwrite_costs[i];\n        }\n        if (total_cost <= this.getPlayer(player_id).getMoney()) {\n            event.valid = true;\n        }\n\n        // Merge overwrite_costs and total_cost;\n        overwrite_costs[player_id] -= total_cost;\n\n        event.moneys = overwrite_costs;\n        event.card_id = card_id;\n        event.target_card_ids = overlapped;\n\n        return event;\n    }\n\n    public buildLandmark(player_id: PlayerId, card_id: CardId): boolean {\n        let event: Event = this.getEventBuildLandmark(player_id, card_id);\n        if (event == null || !event.valid) {\n            return false;\n        }\n        this.events.push(event);\n\n        // Update the data.\n        this.getPlayer(player_id).addMoney(event.moneys[player_id]);\n        this.card_manager.buildLandmark(player_id, card_id);\n\n        this.done(Phase.BuildFacility);\n        return true;\n    }\n\n    public getEventBuildLandmark(player_id: PlayerId, card_id: CardId): Event {\n        // State is valid?\n        if (!this.isValid(player_id, Phase.BuildFacility)) {\n            return null;\n        }\n\n        // Is a landmark?\n        if (!this.card_manager.isLandmark(card_id)) {\n            return null;\n        }\n\n        // Facility is valid?\n        let facility: Facility = this.card_manager.getFacility(card_id);\n        if (!facility) {\n            return null;\n        }\n\n        // Isn't already built?\n        let facility_owner: PlayerId = this.getOwnerId(card_id);\n        if (facility_owner !== -1) {\n            // Already built.\n            return null;\n        }\n\n        let event: Event = new Event();\n\n        // Money is valid?\n        let cost: number = facility.getCost();\n        if (cost <= this.getPlayer(player_id).getMoney()) {\n            event.valid = true;\n        }\n\n        event.player_id = player_id;\n        event.step = this.step;\n        event.type = EventType.Build;\n        event.moneys[player_id] -= cost;\n        event.card_id = card_id;\n\n        return event;\n    }\n\n    public paySalary(): boolean {\n        let salary: number = this.getCurrentPlayer().paySalary();\n\n        let event: Event = new Event();\n        this.events.push(event);\n        event.step = this.step;\n        event.type = EventType.Salary;\n        event.moneys[this.current_player_id] += salary;\n\n        this.done(Phase.PaySalary);\n        return true;\n    }\n\n    public endTurn(): boolean {\n        if (this.current_player_id === this.players.length - 1) {\n            this.current_player_id = 0;\n            this.round += 1;\n            this.turn = 0;\n        }\n        else {\n            this.current_player_id += 1;\n            this.turn += 1;\n        }\n\n        this.done(Phase.EndTurn);\n        return true;\n    }\n\n    public endGame(): boolean {\n        // Do nothing so far.\n        this.done(Phase.EndGame);\n        return true;\n    }\n\n    public quit(player_id: PlayerId): boolean {\n        let event: Event = new Event();\n        this.events.push(event);\n        event.step = this.step;\n        event.type = EventType.Quit;\n        event.player_id = player_id;\n\n        // TODO: Do not end the game. Swith to AI.\n        this.phase = Phase.EndGame;\n        this.step++;\n        return true;\n    }\n\n    public quitGame(user_id: string): boolean {\n        this.removeWatcher(user_id);\n        const player_id: number = this.getPlayerId(user_id);\n        if (player_id === -1) {\n            return false;\n        }\n        return this.quit(player_id);\n    }\n\n    public getEvents(): Event[] {\n        return this.events;\n    }\n    public getStep(): number {\n        return this.step;\n    }\n    public getPhase(): Phase {\n        return this.phase;\n    }\n\n    public getBoard(): Board {\n        return this.board;\n    }\n    public getPlayers(): Player[] {\n        return this.players;\n    }\n    public getFacility(card_id: CardId): Facility {\n        return this.card_manager.getFacility(card_id);\n    }\n    public isFacility(card_id: CardId): boolean {\n        return this.card_manager.isFacility(card_id);\n    }\n    public getCardIdOnBoard(x: number, y: number): CardId {\n        return this.board.getCardId(x, y);\n    }\n    public getFacilityOnBoard(x: number, y: number): Facility {\n        return this.card_manager.getFacility(this.getCardIdOnBoard(x, y));\n    }\n    public getOwnerIdOnBoard(x: number, y: number): PlayerId {\n        return this.getOwnerId(this.getCardIdOnBoard(x, y));\n    }\n    public getCurrentPlayerId(): PlayerId {\n        return this.current_player_id;\n    }\n    public getCurrentPlayer(): Player {\n        return this.getPlayer(this.current_player_id);\n    }\n    public getPlayerId(user_id: string): PlayerId {\n        for (let pid: number = 0; pid < this.players.length; ++pid) {\n            if (this.players[pid].user_id === user_id) {\n                return pid;\n            }\n        }\n        return -1;\n    }\n    public getPlayer(player_id: PlayerId): Player {\n        if (player_id == null || player_id < 0) {\n            return null;\n        }\n        return this.players[player_id];\n    }\n    public getPlayerCards(player_id: PlayerId): PlayerCards {\n        return this.card_manager.getPlayerCards(player_id);\n    }\n    public getSortedHand(player_id: PlayerId): CardId[] {\n        return this.card_manager.sortFacilitiesForHand(this.getPlayerCards(player_id).getHand());\n    }\n    public isLandmark(card_id: CardId): boolean {\n        return this.card_manager.isLandmark(card_id);\n    }\n    public getLandmarks(): CardId[] {\n        return this.card_manager.getLandmarks();\n    }\n    public getOwnerId(card_id: CardId): PlayerId {\n        return this.card_manager.getOwner(card_id);\n    }\n    public getOwner(card_id: CardId): Player {\n        return this.getPlayer(this.getOwnerId(card_id));\n    }\n    public getWinner(): PlayerId {\n        return this.winner;\n    }\n    public getPosition(card_id: CardId): [number, number] {\n        return this.board.getPosition(card_id);\n    }\n    public getDiceResult(): DiceResult {\n        return this.dice_result;\n    }\n    public isCharacter(card_id: CardId): boolean {\n        return this.card_manager.isCharacter(card_id);\n    }\n    public getCharacter(card_id: CardId): Character {\n        return this.card_manager.getCharacter(card_id);\n    }\n    public getDiceDelta(): number {\n        return this.effect_manager.getDiceDelta();\n    }\n    public getTargetFacilities(): CardId[] {\n        return this.target_facilities;\n    }\n    public isEnd(): boolean {\n        return (this.phase === Phase.EndGame);\n    }\n    public getWatchers(): string[] {\n        return this.watcher_user_ids;\n    }\n    public addWatcher(user_id: string): void {\n        if (this.watcher_user_ids.indexOf(user_id) === -1) {\n            this.watcher_user_ids.push(user_id);\n        }\n    }\n    public removeWatcher(user_id: string): void {\n        const index: number = this.watcher_user_ids.indexOf(user_id);\n        if (index !== -1) {\n            this.watcher_user_ids.splice(index, 1);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/session.ts","import { CardId } from \"./facility\";\nimport { PlayerId } from \"./board\";\nimport { GameMode, MatchingInfo } from \"./protocol\";\n\nexport type RequestCallback = (response: string) => void;\n\nexport abstract class Connection {\n    // Receivers from server.\n    abstract startCheckUpdate(client: Client): void;\n    abstract stopCheckUpdate(): void;\n\n    abstract startCheckLive(callback: RequestCallback): void;\n    abstract stopCheckLive(): void;\n\n    // Senders from client.\n    abstract sendRequest(query: any, callback: RequestCallback): void;\n    abstract matching(query: any, callback: RequestCallback): void;\n    abstract stopCheckMatching(): void;\n\n    // This is for Firebase.onDisconnect only so far.\n    abstract setQueryOnDisconnect(query: any): void;\n}\n\nexport abstract class Client {\n    // TODO: These variables should not be modified by others.\n    public connection: Connection;\n    public session_id: number = -1;\n    public mode: GameMode = GameMode.None;\n    public player_id: PlayerId = -1;\n    // TODO: user_id should be unique. 0 - 9 is reserved for NPCs.\n    public user_id: string = String(Math.floor(Math.random() * 1000000) + 10);\n    public step: number = -1;\n    public live_sessions: number[] = [];\n\n    constructor(connection: Connection) {\n        this.connection = connection;\n    }\n\n    abstract callbackSession(response: string): void;\n    abstract callbackChat(response: any): void;\n\n    public reset(): void {\n        this.session_id = -1;\n        this.mode = GameMode.None;\n        this.player_id = -1;\n        this.step = -1;\n        this.connection.stopCheckUpdate();\n        this.connection.stopCheckLive();\n    }\n\n    public matching(query: any): void {\n        query.command = \"matching\";\n        query.user_id = this.user_id;\n        this.mode = query[\"mode\"];\n        this.connection.stopCheckMatching();\n        this.connection.setQueryOnDisconnect(this.fillRequest(Request.quit()));\n        this.connection.matching(query, this.callbackMatching.bind(this));\n    }\n\n    public checkUpdate(): void {\n        let query = {\n            command: \"board\",\n            session_id: this.session_id,\n            player_id: this.player_id,\n            step: this.step,\n        };\n        this.sendRequest(query);\n    }\n\n    private callbackMatching(response: string): void {\n        const response_json: MatchingInfo = JSON.parse(response);\n        if (response_json == null || !response_json.is_matched) {\n            return;\n        }\n\n        this.session_id = response_json.session_id;\n\n        this.connection.setQueryOnDisconnect(this.fillRequest(Request.quit()));\n\n        this.checkUpdate();\n        this.connection.stopCheckMatching();\n        this.connection.startCheckUpdate(this);\n        this.connection.stopCheckLive();\n    }\n\n    public startCheckLive(callback: RequestCallback): void {\n        this.connection.startCheckLive(callback);\n    }\n\n    public watchGame(session_id: number): void {\n        this.reset();\n        this.session_id = session_id;\n        this.mode = GameMode.OnLineWatch;\n\n        this.sendRequest(Request.watch());\n        this.connection.setQueryOnDisconnect(this.fillRequest(Request.quit()));\n        this.connection.startCheckUpdate(this);\n        this.connection.stopCheckLive();\n    }\n\n    public sendRequest(request: any): void {\n        this.connection.sendRequest(this.fillRequest(request), (response) => {\n            this.callbackSession(response);\n        });\n    }\n\n    public fillRequest(request: any): any {\n        request.user_id = this.user_id;\n        request.session_id = this.session_id;\n        request.player_id = this.player_id;\n        request.mode = this.mode;\n        return request;\n    }\n\n    abstract initBoard(): void;\n}\n\n// Move this class to a Saikoro specific file.\nexport class Request {\n    static matching(name: string, mode: GameMode, deck: string): Object {\n        return {\n            command: \"matching\",\n            name: name,\n            mode: mode,\n            deck: deck,\n        };\n    }\n\n    static chat(stamp_id: number): Object {\n        return {\n            command: \"chat\",\n            stamp_id: stamp_id,\n            timestamp: new Date().getTime(),\n        };\n    }\n\n    static buildFacility(x: number, y: number, card_id: CardId): Object {\n        return {\n            command: \"build\",\n            x: x,\n            y: y,\n            card_id: card_id,\n        };\n    }\n\n    static rollDice(dice_num: number, aim: number): Object {\n        return {\n            command: \"dice\",\n            dice_num: dice_num,\n            aim: aim,\n        };\n    }\n\n    static characterCard(card_id: CardId): Object {\n        return {\n            command: \"character\",\n            card_id: card_id,\n        };\n    }\n\n    static interactFacilityAction(card_id: CardId, target_player_id: PlayerId): Object {\n        return {\n            command: \"interact\",\n            card_id: card_id,\n            target_player_id: target_player_id,\n        };\n    }\n\n    static endTurn(): Object {\n        return {\n            command: \"build\",\n            x: -1,\n            y: -1,\n            card_id: -1,\n        };\n    }\n\n    static quit(): Object {\n        return {\n            command: \"quit\",\n        };\n    }\n\n    static watch(): Object {\n        return {\n            command: \"watch\",\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client.ts","import { Dice, DiceResult } from \"./dice\";\nimport { CardId, FacilityType, Facility } from \"./facility\";\n\nexport type PlayerId = number;\n\nexport class Player {\n    readonly user_id: string;\n    readonly id: PlayerId;\n    readonly name: string;\n    private money: number;\n    readonly salary: number;\n    readonly team: number;\n    private is_auto: boolean;\n\n    constructor(user_id: string, id: PlayerId, name: string, money: number, salary: number,\n        team: number, is_auto: boolean = false) {\n        this.user_id = user_id;\n        this.id = id;\n        this.name = name;\n        this.money = money;\n        this.salary = salary;\n        this.team = team;\n        this.is_auto = is_auto;\n    }\n\n    public toJSON(): Object {\n        return {\n            class_name: \"Player\",\n            user_id: this.user_id,\n            id: this.id,\n            name: this.name,\n            money: this.money,\n            salary: this.salary,\n            team: this.team,\n            is_auto: this.is_auto,\n        }\n    }\n\n    static fromJSON(json): Player {\n        return new Player(json.user_id, json.id, json.name, json.money, json.salary, json.team,\n                          json.is_auto);\n    }\n\n    public getMoney(): number {\n        return this.money;\n    }\n\n    public setMoney(money: number): void {\n        this.money = money;\n    }\n\n    public addMoney(money: number): number {\n        if (this.money + money < 0) {\n            money = -this.money;\n        }\n        this.money += money;\n        return money;  // can be less than money.\n    }\n\n    public paySalary(): number {\n        this.money += this.salary;\n        return this.salary;\n    }\n\n    public isAuto(): boolean {\n        return this.is_auto;\n    }\n\n    public setAuto(is_auto: boolean): void {\n        this.is_auto = is_auto;\n    }\n}\n\nexport const NO_FACILITY: number = -1;\nexport const MULTIPLE: number = -2;  // Used for facilities whose size is more than 1.\n\nexport class Board {\n    private field: CardId[][];\n    readonly row: number;\n    readonly column: number;\n\n    constructor(field: CardId[][] = null, row: number = 5, column: number = 12) {\n        this.row = row;\n        this.column = column;\n        if (field) {\n            this.field = field;\n        }\n        else {\n            this.field = [];\n            for (let x: number = 0; x < this.column; ++x) {\n                this.field[x] = [];\n                for (let y: number = 0; y < this.row; ++y) {\n                    this.field[x][y] = -1;  // NO_FACILITY\n                }\n            }\n        }\n    }\n\n    public toJSON(): Object {\n        return {\n            class_name: \"Board\",\n            field: this.field,\n            row: this.row,\n            column: this.column,\n        }\n    }\n\n    static fromJSON(json): Board {\n        return new Board(json.field, json.row, json.column);\n    }\n\n    public removeCards(x: number, y: number, size: number): CardId[] {\n        let removed: CardId[] = [];\n        let xi: number = x;\n\n        // Find the left most.\n        if (this.field[x][y] === MULTIPLE) {\n            for (; xi >= 0; --xi) {\n                if (this.field[xi][y] !== MULTIPLE) {\n                    break;\n                }\n            }\n        }\n\n        for (; xi < x + size; xi++) {\n            // Delete the left most, which has the card id.\n            let card_id: CardId = this.field[xi][y];\n            this.field[xi][y] = NO_FACILITY;\n            if (card_id === MULTIPLE || card_id === NO_FACILITY) {\n                continue;\n            }\n\n            removed.push(card_id);\n        }\n\n        // Delete the rest of multiple parts.\n        for (; xi < this.column; ++xi) {\n            if (this.field[xi][y] !== MULTIPLE) {\n                break;\n            }\n            this.field[xi][y] = NO_FACILITY;\n        }\n        return removed;\n    }\n\n    public setCardId(x: number, y: number, card_id: CardId, size: number): void {\n        this.field[x][y] = card_id;\n        for (let i: number = 1; i < size; ++i) {\n            this.field[x+i][y] = MULTIPLE;\n        }\n    }\n\n    public getCardId(x: number, y: number): CardId {\n        let card_id: CardId = NO_FACILITY;\n        for (let i: number = x; i >= 0; --i) {\n            card_id = this.field[i][y];\n            if (card_id !== MULTIPLE) {\n                break;\n            }\n        }\n        return card_id;\n    }\n\n    public getRawCardId(x: number, y: number): CardId {\n        return this.field[x][y];\n    }\n\n    public getPosition(card_id: CardId): [number, number] {\n        for (let y: number = 0; y < this.row; ++y) {\n            for (let x: number = 0; x < this.column; ++x) {\n                if (this.field[x][y] === card_id) {\n                    return [x, y];\n                }\n            }\n        }\n        return [-1, -1];\n    }\n\n    public debugString(): string {\n        let output: string = \"\";\n        for (let y: number = 0; y < this.row; ++y) {\n            for (let x: number = 0; x < this.column; ++x) {\n                output += this.field[x][y] + \", \";\n            }\n            output += \"\\n\";\n        }\n        return output;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/board.ts","export class KeyValue {\n    constructor(\n        public key: string = \"\",\n        public value: any = null) {}\n}\n\nexport abstract class Storage {\n    abstract get(key: string, callback: (err: any, value: any) => void): void;\n    abstract set(key: string, value: any, callback: (err: any) => void, expire: number): void;\n    abstract delete(key: string): void;\n    abstract getWithPromise(key: string): Promise<KeyValue>;\n    abstract setWithPromise(key: string, value: any): Promise<KeyValue>;\n    abstract deleteWithPromise(key: string): Promise<KeyValue>;\n\n    public getKeysForDebug(): string[] {\n        return [];\n    }\n}\n\nexport class LocalStorage extends Storage {\n    public storage: { [key: string]: any; } = {};\n\n    private parseKey(key_string: string): string[] {\n        let keys: string[] = [];\n        for (let key of key_string.split(\"/\")) {\n            if (key !== \"\") {\n                keys.push(key);\n            }\n        }\n        return keys;\n    }\n\n    private getValue(key: string): any {\n        let keys: string[] = this.parseKey(key);\n        let storage: any = this.storage;\n        for (let i: number = 0; i < keys.length; ++i) {\n            storage = storage[keys[i]];\n            if (storage == undefined) {\n                return undefined;\n            }\n        }\n        return storage;\n    }\n\n    private setValue(key: string, value: any): void {\n        let keys: string[] = this.parseKey(key);\n        if (keys.length === 0) {\n            this.storage = value;  // Replace all.\n            return;\n        }\n\n        let storage: any = this.storage;\n        for (let i: number = 0; i < keys.length - 1; ++i) {\n            let child = storage[keys[i]];\n            if (child == undefined) {\n                storage[keys[i]] = {};\n                storage = storage[keys[i]];\n            }\n            else {\n                storage = child;\n            }\n        }\n        storage[keys[keys.length - 1]] = value;\n    }\n\n    private deleteValue(key: string): void {\n        let keys: string[] = this.parseKey(key);\n        if (keys.length === 0) {\n            this.storage = {};  // Delete all.\n            return;\n        }\n\n        let storage: any = this.storage;\n        for (let i: number = 0; i < keys.length - 1; ++i) {\n            storage = storage[keys[i]];\n            if (storage == undefined) {\n                return;  // Already deleted.\n            }\n        }\n        delete storage[keys[keys.length - 1]];\n        // TODO: delete parent nodes.\n    }\n\n    public get(key: string, callback: (err: any, value: any) => void): void {\n        let value = this.getValue(key);\n        if (value != undefined) {\n            callback(null, this.storage[key]);\n        }\n\n    }\n\n    public getWithPromise(key: string): Promise<KeyValue> {\n        return new Promise<KeyValue>((resolve, reject) => {\n            let data: KeyValue = new KeyValue(key, this.getValue(key));\n            resolve(data);\n        });\n    }\n\n    public delete(key: string): void {\n        this.deleteValue(key);\n    }\n\n    public deleteWithPromise(key: string): Promise<KeyValue> {\n        this.deleteValue(key);\n        return new Promise<KeyValue>((resolve, reject) => {\n            let data: KeyValue = new KeyValue(key, null);\n            resolve(data);\n        });\n    }\n\n    public getKeys(): string[] {\n        return Object.keys(this.storage);\n    }\n\n    public set(key: string, value: any, callback: (err: any) => void, expire: number): void {\n        this.setValue(key, value);\n        callback(null);\n    }\n\n    public setWithPromise(key: string, value: any): Promise<KeyValue> {\n        this.setValue(key, value);\n        return new Promise<KeyValue>((resolve, reject) => {\n            let data: KeyValue = new KeyValue(key, value);\n            resolve(data);\n        });\n    }\n\n    public getKeysForDebug(): string[] {\n        return Object.keys(this.storage);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/storage.ts","export function shuffle(array: any[]): any[] {\n    let shuffled_array: any[] = array.slice(0);\n    for (let l: number = shuffled_array.length; l > 0; --l) {\n        let i: number = Math.floor(Math.random() * l);\n        [shuffled_array[i], shuffled_array[l-1]] = [shuffled_array[l-1], shuffled_array[i]];\n    }\n    return shuffled_array;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import { RequestCallback, Connection, Client } from \"./client\";\nimport { Phase, Session } from \"./session\";\nimport { HtmlView } from \"./html_view\";\nimport { GameMode } from \"./protocol\";\n\n// TODO: can be merged with Client?\nexport class WebClient extends Client {\n    private no_update_count: number = 0;\n    private view: HtmlView;\n    private chat_timestamps: { [user_id: string]: number } = {};\n\n    constructor(connection: Connection) {\n        super(connection);\n        this.view = new HtmlView(this);\n    }\n\n    public reset(): void {\n        super.reset();\n        this.no_update_count = 0;\n    }\n\n    public initBoard(): void {\n        this.view.initView();\n    }\n\n    public callbackSession(response: string): void {\n        if (this.mode === GameMode.None) {\n            return;\n        }\n\n        if (!response) {\n            console.log(\"Stop polling.\");\n            this.connection.stopCheckUpdate();\n        }\n\n        // If the response is \"{}\", the server does not have any update.\n        if (response === \"{}\") {\n            console.log(\"Already updated.\");\n\n            // If no update continues 100 times, stop polling.\n            this.no_update_count++;\n            if (this.no_update_count > 100) {\n                console.log(\"No update for a while.\");\n                this.connection.stopCheckUpdate();\n            }\n            return;\n        }\n        this.no_update_count = 0;\n\n        let session: Session = Session.fromJSON(JSON.parse(response));\n\n        if (session.getPhase() === Phase.EndGame) {\n            this.connection.stopCheckUpdate();\n        }\n\n        let step: number = session.getStep();\n        console.log(step);\n        if (step === this.step) {\n            console.log(\"Already updated.\");\n            return;\n        }\n        this.player_id = session.getPlayerId(this.user_id);\n        this.step = step;\n\n        this.view.updateView(session, this.player_id);\n    }\n\n    public callbackChat(data: any): void {  // Request.chat\n        if (data == null) {\n            return;\n        }\n        const user_ids: string[] = Object.keys(data);\n\n        for (let user_id of user_ids) {\n            const chat: any = data[user_id];\n            const prev_timestamp: number = this.chat_timestamps[user_id];\n            if (chat.timestamp == undefined || chat.timestamp === prev_timestamp) {\n                continue;\n            }\n            this.view.updateChat(chat);\n            this.chat_timestamps[user_id] = chat.timestamp;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/saikoro.ts","import { RequestCallback, Connection, Client } from \"./client\";\nimport { MatchedData, SessionHandler } from \"./session_handler\";\nimport { KeyValue, Storage, LocalStorage } from \"./storage\";\nimport { GameMode, Protocol, MatchingInfo } from \"./protocol\";\n\nconst storage = new LocalStorage();\nlet session_handler: SessionHandler = new SessionHandler(storage);\n\nexport class StandaloneConnection extends Connection {\n    constructor(public delay: number = 0) {\n        super();\n    }\n\n    public startCheckUpdate(client: Client): void {}\n    public stopCheckUpdate(): void {}\n\n    public matching(query: any, callback: RequestCallback): void {\n        session_handler.handleMatching(query).then((data: KeyValue) => {\n            let matching_info: MatchingInfo = data.value;\n            setTimeout(() => {\n                callback(JSON.stringify(matching_info));\n            }, this.delay);\n        });\n    }\n    public stopCheckMatching(): void {\n        // Do nothing.\n    }\n\n    public setQueryOnDisconnect(query: any): void {\n        // Do nothing.\n    }\n\n    public sendRequest(query: any, callback: RequestCallback): void {\n        session_handler.handleCommand(query).then((data: KeyValue) => {\n            setTimeout(() => {\n                callback(data.value);\n            }, this.delay);\n        });\n    }\n\n    public startCheckLive(callback: RequestCallback): void {\n        // Do nothing.\n    }\n    public stopCheckLive(): void {\n        // Do nothing.\n    }\n}\n\nexport class HybridConnection extends Connection {\n    private online_connection: Connection = null;\n    private offline_connection: Connection = null;\n    private connection: Connection = null;\n\n    constructor(online_connection: Connection = null) {\n        super();\n        this.online_connection = online_connection;\n        this.offline_connection = new StandaloneConnection();\n        this.connection = this.offline_connection;\n    }\n\n    public setOnlineConnection(connection: Connection): void {\n        if (this.online_connection) {\n            this.online_connection.stopCheckUpdate();\n        }\n        this.online_connection = connection;\n    }\n\n    public startCheckUpdate(client: Client): void {\n        this.connection = this.getConnection(client.mode);\n        this.connection.startCheckUpdate(client);\n    }\n\n    public stopCheckUpdate(): void {\n        this.connection.stopCheckUpdate();\n    }\n\n    public matching(query: any, callback: RequestCallback): void {\n        this.connection.stopCheckUpdate();\n        this.connection = this.getConnection(query.mode);\n        this.connection.matching(query, callback);\n    }\n    public stopCheckMatching(): void {\n        if (this.online_connection) {\n            this.online_connection.stopCheckMatching();\n            return;\n        }\n        this.offline_connection.stopCheckMatching();\n    }\n\n    public setQueryOnDisconnect(query: any): void {\n        // Online connection is used if available.\n        if (this.online_connection) {\n            this.online_connection.setQueryOnDisconnect(query);\n            return;\n        }\n        this.offline_connection.setQueryOnDisconnect(query);\n    }\n\n    public startCheckLive(callback: RequestCallback): void {\n        // Online connection is used if available.\n        if (this.online_connection) {\n            this.online_connection.startCheckLive(callback);\n            return;\n        }\n        this.offline_connection.startCheckLive(callback);\n    }\n    public stopCheckLive(): void {\n        // Online connection is used if available.\n        if (this.online_connection) {\n            this.online_connection.stopCheckLive();\n            return;\n        }\n        this.offline_connection.stopCheckLive();\n    }\n\n    private getConnection(mode: GameMode): Connection {\n        if (Protocol.isOnlineMode(mode) && (this.online_connection != null)) {\n            return this.online_connection;\n        }\n        return this.offline_connection;\n    }\n\n    public sendRequest(query: any, callback: RequestCallback): void {\n        this.getConnection(query.mode).sendRequest(query, callback);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/standalone_connection.ts","import { Session, Phase } from \"./session\";\nimport { Player, PlayerId } from \"./board\";\nimport { CardId, Facility } from \"./facility\";\nimport { shuffle } from \"./utils\";\n\nexport class AutoPlay {\n    static play(session: Session): boolean {\n        let player_id: PlayerId = session.getCurrentPlayerId();\n        switch (session.getPhase()) {\n            case Phase.CharacterCard:\n            case Phase.DiceRoll:\n                return session.diceRoll(player_id, 2, 0);\n            case Phase.BuildFacility:\n                return AutoPlay.playBuildFacility(session);\n            case Phase.FacilityActionWithInteraction:\n                return AutoPlay.playInteractFacilityAction(session);\n        }\n        return false;\n    }\n\n    static playInteractFacilityAction(session: Session): boolean {\n        let player_id: PlayerId = session.getCurrentPlayerId();\n        let target_facilities: CardId[] = session.getTargetFacilities();\n        let target_id: PlayerId = (player_id === 0) ? 1 : 0;  // TODO: Fixme :)\n\n        if (target_facilities.length === 0) {\n            return false;\n        }\n\n        return session.interactFacilityAction(player_id, target_facilities[0], target_id);\n    }\n\n    static playBuildFacility(session: Session): boolean {\n        let landmarks: CardId[] = session.getLandmarks();\n        let player_id: PlayerId = session.getCurrentPlayerId();\n        let player: Player = session.getPlayer(player_id);\n        let money: number = player.getMoney();\n\n        for (let landmark of landmarks) {\n            if (session.getOwnerId(landmark) !== -1) {\n                continue;\n            }\n\n            if (money >= session.getFacility(landmark).getCost()) {\n                return session.buildLandmark(player_id, landmark);\n            }\n        }\n\n        let card_ids: CardId[] = session.getPlayerCards(player_id).getHand();\n\n        for (let card_id of card_ids) {\n            if (session.isCharacter(card_id)) {\n                continue;\n            }\n            let facility: Facility = session.getFacility(card_id);\n            if (money < facility.getCost()) {\n                continue;\n            }\n\n            // TODO: Enabled to overwrite existing facilities.\n            // availablePosition does not return overwritable facilities.\n            let positions: [number, number][] = shuffle(session.availablePosition(card_id));\n            if (positions.length === 0) {\n                continue;\n            }\n\n            let [x, y] = positions[0];\n            return session.buildFacility(player_id, x, y, card_id);\n        }\n        return session.buildFacility(player_id, -1, -1, -1);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/auto_play.ts","import { Player, Board, PlayerId } from \"./board\";\nimport { CardId, CardDataId, FacilityType, Facility,\n         Character, CharacterData, CharacterType } from \"./facility\";\n\nexport class PlayerCards {\n    private talon: CardId[];    // 山札\n    private hand: CardId[];     // 手札\n    private field: CardId[];    // 使用中 (建設中)\n    private discard: CardId[];  // 捨て札\n    readonly max_hand: number = 10;\n\n    constructor(\n        talon: CardId[] = [],\n        hand: CardId[] = [],\n        field: CardId[] = [],\n        discard: CardId[] = []) {\n        this.talon = talon;\n        this.hand = hand;\n        this.field = field;\n        this.discard = discard;\n    }\n\n    public toJSON(): Object {\n        return {\n            class_name: \"PlayerCards\",\n            talon: this.talon,\n            hand: this.hand,\n            field: this.field,\n            discard: this.discard,\n        }\n    }\n\n    static fromJSON(json): PlayerCards {\n        return new PlayerCards(json.talon, json.hand, json.field, json.discard);\n    }\n\n    public getSize(): number {\n        return this.talon.length + this.hand.length + this.field.length + this.discard.length;\n    }\n\n    private getIndex(card_id: CardId, facility_array: CardId[]): number {\n        // indexOf is type sensitive (e.g. \"1\" is different value from 1).\n        // card_id could be a string.\n        if (typeof card_id !== \"number\") {\n            console.warn(`card_id(${card_id}) is not a number`);\n            card_id = Number(card_id);\n        }\n        return facility_array.indexOf(card_id);\n    }\n\n    private deleteCardId(card_id: CardId, facility_array: CardId[]): boolean {\n        let index: number = this.getIndex(card_id, facility_array);\n        if (index < 0) {\n            console.warn(\"deleteCardId - index < 0.\");\n            return false;\n        }\n        facility_array.splice(index, 1);\n        return true;\n    }\n\n    private moveCardId(\n        card_id: CardId, array_from: CardId[], array_to: CardId[]): boolean {\n        if (card_id < 0) {\n            console.warn(\"card_id < 0.\");\n            return false;\n        }\n        if (!this.deleteCardId(card_id, array_from)) {\n            console.warn(\"deleteCardId failed.\");\n            return false;\n        }\n        array_to.push(card_id);\n        return true;\n    }\n\n    public addTalon(card_id: CardId): boolean {\n        if (card_id < 0) {\n            console.warn(\"card_id < 0.\");\n            return false;\n        }\n        this.talon.push(card_id);\n        return true;\n    }\n\n    public getTalon(): CardId[] {\n        return this.talon;\n    }\n\n    public getHand(): CardId[] {\n        return this.hand;\n    }\n\n    // Move a random facility from Talon to Hand.\n    public dealToHand(): CardId {\n        if (this.talon.length === 0 || this.hand.length === this.max_hand) {\n            return -1;\n        }\n        let random_index: number = Math.floor(Math.random() * this.talon.length);\n        let card_id: CardId = this.talon[random_index];\n        this.moveTalonToHand(card_id);\n        return card_id;\n    }\n\n    public getTalonSize(): number {\n        return this.talon.length;\n    }\n\n    public getHandSize(): number {\n        return this.hand.length;\n    }\n\n    public moveTalonToHand(card_id: CardId): boolean {\n        if (this.hand.length === this.max_hand) {\n            return false;\n        }\n        return this.moveCardId(card_id, this.talon, this.hand);\n    }\n\n    public isInHand(card_id: CardId): boolean {\n        let index: number = this.getIndex(card_id, this.hand);\n        return (index >= 0);\n    }\n\n    // Used for initial build.\n    public moveTalonToField(card_id: CardId): boolean {\n        return this.moveCardId(card_id, this.talon, this.field);\n    }\n\n    public moveHandToField(card_id: CardId): boolean {\n        return this.moveCardId(card_id, this.hand, this.field);\n    }\n\n    public moveHandToDiscard(card_id: CardId): boolean {\n        return this.moveCardId(card_id, this.hand, this.discard);\n    }\n\n    public moveFieldToDiscard(card_id: CardId): boolean {\n        return this.moveCardId(card_id, this.field, this.discard);\n    }\n}\n\ntype LandmarkInfo = [CardId, PlayerId];\n\nexport class CardManager {\n    private facilities: { [key: number]: Facility; };\n    private characters: { [key: number]: Character; };\n    private player_cards_list: PlayerCards[];\n    private landmarks: LandmarkInfo[];\n\n    readonly max_card_size: number = 1000;\n    readonly landmark_id_base: number = 10000;\n\n    constructor(\n        facilities: { [key: number]: Facility; } = {},\n        characters: { [key: number]: Character; } = {},\n        player_cards_list: PlayerCards[] = null,\n        landmarks: LandmarkInfo[] = []) {\n        this.facilities = facilities;\n        this.characters = characters;\n        if (player_cards_list) {\n            this.player_cards_list = player_cards_list;\n        } else {\n            this.player_cards_list = [];\n            for (let i: number = 0; i < 4; i++) {\n                this.player_cards_list.push(new PlayerCards());\n            }\n        }\n        this.landmarks = landmarks;\n    }\n\n    public toJSON(): Object {\n        let facility_json = {};\n        for (let id in this.facilities) {\n            facility_json[id] = this.facilities[id].toJSON();\n        }\n        let character_json = {};\n        for (let id in this.characters) {\n            character_json[id] = this.characters[id].toJSON();\n        }\n        return {\n            class_name: \"CardManager\",\n            facilities: facility_json,\n            characters: character_json,\n            player_cards_list: this.player_cards_list.map(cards => { return cards.toJSON(); }),\n            landmarks: this.landmarks,\n        }\n    }\n\n    static fromJSON(json): CardManager {\n        let facilities: { [key: number]: Facility; } = {};\n        for (let id in json.facilities) {\n            facilities[id] = Facility.fromJSON(json.facilities[id]);\n        }\n        let characters: { [key: number]: Character; } = {};\n        for (let id in json.characters) {\n            characters[id] = Character.fromJSON(json.characters[id]);\n        }\n        return new CardManager(\n            facilities,\n            characters,\n            json.player_cards_list.map(cards => { return PlayerCards.fromJSON(cards); }),\n            json.landmarks,\n        );\n    }\n\n    public addFacility(player_id: PlayerId, facility_data_id: CardDataId): boolean {\n        let player_cards: PlayerCards = this.player_cards_list[player_id];\n        if (player_cards == null) {\n            return false;\n        }\n        let size: number = player_cards.getSize();\n        if (size >= this.max_card_size) {\n            return false;\n        }\n        // CardId is separated per player (i.e. player1 = 1000 - 1999).\n        let card_id: CardId = player_id * this.max_card_size + size;\n        this.facilities[card_id] = new Facility(facility_data_id);\n        player_cards.addTalon(card_id);\n        return true;\n    }\n\n    public addCharacter(player_id: PlayerId, character_data_id: CardDataId): boolean {\n        let player_cards: PlayerCards = this.player_cards_list[player_id];\n        if (player_cards == null) {\n            return false;\n        }\n        let size: number = player_cards.getSize();\n        if (size >= this.max_card_size) {\n            return false;\n        }\n        // Character card ID starts from 500.\n        const char_base: CardId = 500;\n        // CardId is separated per player (i.e. player1 = 1000 - 1999).\n        let card_id: CardId = player_id * this.max_card_size + char_base + size;\n        this.characters[card_id] = new Character(character_data_id);\n        player_cards.addTalon(card_id);\n        return true;\n    }\n\n    public addLandmark(landmark: Facility): CardId {\n        let card_id: CardId = this.landmark_id_base + this.landmarks.length;\n        this.facilities[card_id] = landmark;\n        this.landmarks.push([card_id, -1]);  // NO_PLAYER.\n        return card_id;\n    }\n\n    public buildLandmark(player_id: PlayerId, landmark_id: CardId): boolean {\n        for (let landmark_info of this.landmarks) {\n            if (landmark_info[0] === landmark_id) {\n                landmark_info[1] = player_id;\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public isCharacter(card_id: CardId): boolean {\n        return (this.characters[card_id] != undefined);\n    }\n\n    public getCharacter(card_id: CardId): Character {\n        if (card_id < 0) {\n            return null;\n        }\n        return this.characters[card_id];\n    }\n\n    public isLandmark(card_id: CardId): boolean {\n        for (let landmark_info of this.landmarks) {\n            if (landmark_info[0] === card_id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public getLandmarks(): CardId[] {\n        let landmarks: CardId[] = [];\n        for (let landmark_info of this.landmarks) {\n            landmarks.push(landmark_info[0]);\n        }\n        return landmarks;\n    }\n\n    public getFacility(card_id: CardId): Facility {\n        if (card_id < 0) {\n            return null;\n        }\n        return this.facilities[card_id];\n    }\n\n    public isFacility(card_id: CardId): boolean {\n        return ((this.facilities[card_id] != undefined) && !this.isLandmark(card_id));\n    }\n\n    public getOwner(card_id: CardId): PlayerId {\n        if (card_id < 0) {\n            return -1;\n        }\n        if (this.isLandmark(card_id)) {\n            for (let landmark_info of this.landmarks) {\n                if (landmark_info[0] === card_id) {\n                    return landmark_info[1];\n                }\n            }\n            return -1;\n        }\n        // TODO: Check actual existance of card_id.\n        // TODO: Owner can be changed while the game.\n        return Math.floor(card_id / this.max_card_size);\n    }\n\n    public getPlayerCards(player_id: PlayerId): PlayerCards {\n        if (player_id < 0 || this.player_cards_list.length <= player_id) {\n            console.warn(\"player_id is invalid.\");\n            return null;\n        }\n        return this.player_cards_list[player_id];\n    }\n\n    public getPlayerCardsFromCardId(card_id: CardId): PlayerCards {\n        if (card_id < 0 || card_id >= this.landmark_id_base) {\n            return null;\n        }\n        return this.player_cards_list[this.getOwner(card_id)];\n    }\n\n    public isInHand(player_id: PlayerId, card_id: CardId): boolean {\n        if (card_id < 0) {\n            console.warn(\"card_id < 0.\");\n            return false;\n        }\n        if (player_id < 0 || this.player_cards_list.length <= player_id) {\n            console.warn(\"player_id is invalid.\");\n            return false;\n        }\n\n        // Check is owner is correct.\n        if (this.getOwner(card_id) !== player_id) {\n            return false;\n        }\n\n        return this.player_cards_list[player_id].isInHand(card_id);\n    }\n\n    public isInArea(area: number, card_id: CardId): boolean {\n        if (card_id < 0) {\n            console.warn(\"card_id < 0.\");\n            return false;\n        }\n        return (this.facilities[card_id].getArea().indexOf(area) !== -1);\n    }\n\n    public moveFieldToDiscard(card_id: CardId): boolean {\n        if (card_id < 0) {\n            console.warn(\"card_id < 0.\");\n            return false;\n        }\n        return this.getPlayerCardsFromCardId(card_id).moveFieldToDiscard(card_id);\n    }\n\n    public moveHandToField(card_id: CardId): boolean {\n        if (card_id < 0) {\n            console.warn(\"card_id < 0.\");\n            return false;\n        }\n        return this.getPlayerCardsFromCardId(card_id).moveHandToField(card_id);\n    }\n\n    public moveHandToDiscard(card_id: CardId): boolean {\n        if (card_id < 0) {\n            console.warn(\"card_id < 0.\");\n            return false;\n        }\n        return this.getPlayerCardsFromCardId(card_id).moveHandToDiscard(card_id);\n    }\n\n    // Used for initial build.\n    public moveTalonToField(card_id: CardId): boolean {\n        if (card_id < 0) {\n            console.warn(\"card_id < 0.\");\n            return false;\n        }\n        return this.getPlayerCardsFromCardId(card_id).moveTalonToField(card_id);\n    }\n\n    private compareCharacters(id1: CardId, id2: CardId): number {\n        let char1: Character = this.characters[id1];\n        let char2: Character = this.characters[id2];\n        return char1.data_id - char2.data_id;\n    }\n\n    private compareAreas(area1: number[], area2: number[]): number {\n        let len1: number = area1.length;\n        let len2: number = area2.length;\n        for (let i: number = 0; i < Math.min(len1, len2); ++i) {\n            if (area1[i] === area2[i]) {\n                continue;\n            }\n            return area1[i] - area2[i];\n        }\n        return len1 - len2;\n    }\n\n    public sortFacilitiesForHand(facilities: CardId[]): CardId[] {\n        return facilities.sort((id1, id2) => {\n            // Check cases of character cards.\n            let c1: number = this.isCharacter(id1) ? 1 : 0;\n            let c2: number = this.isCharacter(id2) ? 1 : 0;\n            if (c1 + c2 === 2) {\n                return this.compareCharacters(id1, id2);\n            }\n            else if (c1 + c2 === 1) {\n                return c1 - c2;\n            }\n\n            // Both IDs represents facilities.\n            let f1: Facility = this.facilities[id1];\n            let f2: Facility = this.facilities[id2];\n            let comp_area = this.compareAreas(f1.area, f2.area);\n            if (comp_area !== 0) {\n                return comp_area;\n            }\n            else if (f1.type !== f2.type) {\n                return f1.type - f2.type;\n            }\n            else if (f1.cost !== f2.cost) {\n                return f1.cost - f2.cost;\n            }\n            else if (f1.name !== f2.name) {\n                return f1.name < f2.name ? -1 : 1;\n            }\n            return 0;\n        });\n    }\n\n    // Check if the facility is overwritable regardless the cost.\n    public canOverwrite(card_id: CardId): boolean {\n        if (this.isLandmark(card_id)) {\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class CardEffect {\n    readonly data_id: CardDataId;\n    readonly character: Character;  // TODO: Nice to merge it to CardManager?\n    readonly round: number;\n    readonly turn: number;\n\n    constructor(data_id: CardDataId, round: number, turn: number) {\n        this.data_id = data_id;\n        this.character = new Character(data_id);\n        this.round = round;\n        this.turn = turn;\n    }\n\n    public toJSON(): Object {\n        return {\n            class_name: \"CardEffect\",\n            data_id: this.data_id,\n            // Character is not encoded. data_id can reproduce Character.\n            round: this.round,\n            turn: this.turn,\n        };\n    }\n\n    static fromJSON(json): CardEffect {\n        return new CardEffect(json.data_id, json.round, json.turn);\n    }\n}\n\nexport class EffectManager {\n    private cards: CardEffect[];\n    constructor(cards: CardEffect[] = []) {\n        this.cards = cards;\n    }\n\n    public toJSON(): Object {\n        let cards: Object[] = this.cards.map((card) => { return card.toJSON(); });\n        return {\n            class_name: \"EffectManager\",\n            cards: cards,\n        };\n    }\n\n    static fromJSON(json): EffectManager {\n        let cards: CardEffect[] = json.cards.map((card) => { return CardEffect.fromJSON(card); });\n        return new EffectManager(cards);\n    }\n\n    public addCard(data_id: CardDataId, round: number, turn: number): void {\n        this.cards.push(new CardEffect(data_id, round, turn));\n    }\n\n    // Remove expired cards.\n    public expire(round: number, turn: number): void {\n        let new_cards: CardEffect[] = [];\n        const round_factor: number = 10;  // Any number >= 4.\n        for (let card of this.cards) {\n            if ((card.round + card.character.round) * round_factor + card.turn >\n                round * round_factor + turn) {\n                new_cards.push(card);\n            }\n        }\n        this.cards = new_cards;\n    }\n\n    public getDiceDelta(): number {\n        let delta: number = 0;\n        for (let card of this.cards) {\n            if (card.character.type === CharacterType.DiceDelta) {\n                delta += card.character.property[\"delta\"];\n            }\n        }\n        return delta;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/card_manager.ts","import { CardData, CardId, Facility, CardDataId, Character } from \"./facility\";\nimport { Board } from \"./board\";\n\nexport class DeckMaker {\n    private cards: { [key: number]: CardDataId }  = {};  // key is CardId.\n    readonly board: Board = new Board();\n    readonly chars: CardDataId[] = [-1, -1, -1, -1, -1];\n    private availables: CardDataId[][];\n\n    constructor() {\n        this.availables = [];\n        for (let x: number = 0; x < this.board.column; ++x) {\n            this.availables[x] = CardData.getAvailableFacilities(x + 1);\n        }\n    }\n\n    public getAvailableFacilities(x: number): CardDataId[] {\n        return this.availables[x];\n    }\n\n    public setFacility(x: number, y: number, data_id: CardDataId): boolean {\n        let facility: Facility = new Facility(data_id);  // TODO: Can refer FACILITY_DATA instead?\n\n        // Check the facility's area.\n        let valid: boolean = false;\n        for (let s = 0; s < facility.size; ++s) {\n            if (facility.area.indexOf(x + 1 - s) !== -1) {  // area is 1-origin.\n                x = x - s;\n                valid = true;\n                break;\n            }\n        }\n        if (!valid) {\n            return false;\n        }\n\n        let size: number = facility.size;\n        this.board.removeCards(x, y, size).map((removed: CardId) => {\n            delete this.cards[removed];\n        });\n        let card_id: CardId = this.board.row * x + y;\n        this.board.setCardId(x, y, card_id, size);\n        this.cards[card_id] = data_id;\n        return true;\n    }\n\n    public getFacility(card_id: CardId): Facility {\n        return new Facility(this.cards[card_id]);  // TODO: Create a Facility pool.\n    }\n\n    public removeFacility(x: number, y: number): void {\n        this.board.removeCards(x, y, 1).map((removed: CardId) => {\n            delete this.cards[removed];\n        });\n    }\n\n    public getDeck(): CardDataId[] {\n        let deck: CardDataId[] = [];\n        for (let key of Object.keys(this.cards)) {\n            deck.push(this.cards[key]);\n        }\n        for (let data_id of this.chars) {\n            if (data_id !== -1) {\n                deck.push(data_id);\n            }\n        }\n        return deck;\n    }\n\n    public setCharacter(x: number, data_id: CardDataId): void {\n        this.chars[x] = data_id;\n    }\n\n    public getCharacter(x: number): Character {\n        let data_id: CardDataId = this.chars[x];\n        if (data_id === -1) {\n            return null;\n        }\n        return new Character(data_id);\n    }\n\n    public removeCharacter(x): void {\n        this.chars[x] = -1;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/deck_maker.ts","export class DiceResult {\n    constructor(\n        readonly dice1: number,\n        readonly dice2: number,\n        readonly delta: number = 0,\n        readonly is_miracle: boolean = false,\n        readonly miracle_dice1: number = 0,\n        readonly miracle_dice2: number = 0) { }\n\n    public toJSON(): Object {\n        return {\n            class_name: \"DiceResult\",\n            dice1: this.dice1,\n            dice2: this.dice2,\n            delta: this.delta,\n            is_miracle: this.is_miracle,\n            miracle_dice1: this.miracle_dice1,\n            miracle_dice2: this.miracle_dice2,\n        }\n    }\n\n    static fromJSON(json): DiceResult {\n        return new DiceResult(\n            json.dice1,\n            json.dice2,\n            json.delta,\n            json.is_miracle,\n            json.miracle_dice1,\n            json.miracle_dice2);\n    }\n\n    public result(): number {\n        if (this.is_miracle) {\n            return this.miracle_dice1 + this.miracle_dice2 + this.delta;\n        }\n        return this.dice1 + this.dice2 + this.delta;\n    }\n\n    debugString(): string {\n        return JSON.stringify(this);\n    }\n}\n\nexport class Dice {\n    static roll(dice_num: number, aim: number = 0, delta: number = 0): DiceResult {\n        let dice2_factor: number = (dice_num === 2) ? 1 : 0;\n\n        let dice1: number = Dice.roll1();\n        let dice2: number = Dice.roll1() * dice2_factor;\n        if (dice1 + dice2 === aim) {\n            // Lucky, but not miracle lucky.\n            return new DiceResult(dice1, dice2, delta, false);\n        }\n\n        // Try again for miracle.\n        let miracle_dice1: number = Dice.roll1();\n        let miracle_dice2: number = Dice.roll1() * dice2_factor;\n        if (miracle_dice1 + miracle_dice2 === aim) {\n            return new DiceResult(dice1, dice2, delta, true, miracle_dice1, miracle_dice2);\n        }\n        return new DiceResult(dice1, dice2, delta, false);\n    }\n\n    static roll1(): number {\n        return Math.floor(Math.random() * 6) + 1;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/dice.ts","import { Phase, Session, Event, EventType } from \"./session\";\nimport { PlayerCards } from \"./card_manager\";\nimport { Player, Board, PlayerId } from \"./board\";\nimport { CardId, FacilityType, Facility, CharacterType, Character,\n         CardData, CardDataId } from \"./facility\";\nimport { Dice, DiceResult } from \"./dice\";\nimport { Client, Request } from \"./client\";\nimport { DeckMaker } from \"./deck_maker\";\nimport { GameMode, Protocol, MatchingInfo } from \"./protocol\";\nimport { HtmlViewObject, HtmlCardsView, HtmlCardView, HtmlPlayersView,\n         HtmlMessageView, HtmlButtonsView,\n         HtmlDeckCharView, HtmlBoardView, HtmlDiceView,\n         HtmlChatButtonView } from \"./html_view_parts\";\n\nconst COLOR_FIELD: string = \"#FFF8E1\";\nconst COLOR_LANDMARK: string = \"#B0BEC5\";\nconst COLOR_CLICKABLE: string = \"#FFCA28\";\nconst COLOR_HIGHTLIGHT_CARD: string = \"#FFE082\";\nconst COLOR_CHARACTER: string = \"#FFF9C4\";\nconst COLOR_PLAYERS: string[] = [\"#909CC2\", \"#D9BDC5\", \"#90C290\", \"#9D8189\"];\nconst COLOR_GRAY: string = \"#B0BEC5\";\nconst COLOR_BLUE: string = \"#90CAF9\";\nconst COLOR_GREEN: string = \"#A5D6A7\";\nconst COLOR_RED: string = \"#EF9A9A\";\nconst COLOR_PURPLE: string = \"#B39DDB\";\n\nenum Scene {\n    None,\n    Home,\n    Matching,\n    Deck,\n    Game,\n}\n\nclass EventQueue {\n    private is_running: boolean = false;\n    private event_queue: [() => boolean, number][] = [];\n    private timer: number;\n\n    public reset(): void {\n        this.is_running = false;\n        this.event_queue = [];\n        window.clearTimeout(this.timer);\n        this.timer = null;\n    }\n\n    public run(): void {\n        if (this.event_queue.length === 0) {\n            return;\n        }\n        if (this.is_running) {\n            return;\n        }\n        this.is_running = true;\n        this.processQueue();\n    }\n\n    public addEvent(event_function: () => boolean, duration: number): void {\n        this.event_queue.push([event_function, duration]);\n        if (!this.is_running) {\n            this.run();\n        }\n    }\n\n    private processQueue(): void {\n        let item: [() => boolean, number] = this.event_queue.shift();\n        if (item == undefined) {\n            this.is_running = false;\n            return;\n        }\n        let event_function: () => boolean = item[0];\n        let is_success: boolean = event_function();\n        let duration: number = is_success ? item[1] : 0;\n\n        this.timer = window.setTimeout(() => {\n            this.processQueue();\n        }, duration);\n    }\n}\n\nexport class HtmlView {\n    private event_queue = new EventQueue();\n    private client: Client;\n    private session: Session = null;\n    private prev_session: Session = null;\n    private prev_step: number = -1;\n    private clicked_card_view: HtmlCardView = null;\n    private deck_maker: DeckMaker = new DeckMaker();\n    private deck_char_view: HtmlDeckCharView = null;\n    private clicked_field: [number, number] = [-1, -1];\n    private cards_views: HtmlCardsView[] = [];\n    private players_view: HtmlPlayersView;\n    private back_button_view: HtmlViewObject = null;\n    private reset_button_view: HtmlViewObject = null;\n    private board_view: HtmlBoardView = null;\n    private landmarks_view: HtmlCardsView = null;\n    private field_card_view: HtmlCardView = null;\n    private card_widget_view: HtmlCardView = null;\n    private dice_widget_view: HtmlDiceView = null;\n    private money_motion_view: HtmlViewObject = null;\n    private message_view: HtmlMessageView = null;\n    private chat_button_view: HtmlChatButtonView = null;\n    private buttons_view: HtmlButtonsView = null;\n    private watchers_view: HtmlViewObject = null;\n    private scene: Scene = Scene.None;\n    private live_session_ids: number[] = [];\n\n    private dice_roll_view: HtmlViewObject = null;  // TODO: try not to use it.\n\n    constructor(client: Client) {\n        this.client = client;\n        this.reset();\n    }\n\n    private reset(): void {\n        this.client.reset();\n        this.session = null;\n        this.prev_session = null;\n        this.prev_step = -1;\n        this.clicked_field = [-1, -1];\n\n        if (this.dice_roll_view) {\n            this.dice_roll_view.remove();\n            this.dice_roll_view = null;\n        }\n        this.event_queue.reset();\n\n        this.client.startCheckLive((response: string) => {\n            this.onLiveSessionsUpdated(response);\n        });\n    }\n\n    public initView(row: number = 5, column: number = 12): void {\n        document.getElementById(\"widgets\").style.display = \"none\";\n\n        // Add click listeners.\n        // Matching.\n        document.getElementById(\"matching_button_deck\").addEventListener(\n            \"click\", () => { this.switchScene(Scene.Deck); });\n\n        document.getElementById(\"matching_button_offline_2\").addEventListener(\n            \"click\", () => { this.onClickMatching(GameMode.OffLine_2); });\n        document.getElementById(\"matching_button_offline_3\").addEventListener(\n            \"click\", () => { this.onClickMatching(GameMode.OffLine_3); });\n        document.getElementById(\"matching_button_offline_4\").addEventListener(\n            \"click\", () => { this.onClickMatching(GameMode.OffLine_4); });\n\n        document.getElementById(\"matching_button_online_2\").addEventListener(\n            \"click\", () => { this.onClickMatching(GameMode.OnLineSingle_2); });\n        document.getElementById(\"matching_button_online_3\").addEventListener(\n            \"click\", () => { this.onClickMatching(GameMode.OnLineSingle_3); });\n        document.getElementById(\"matching_button_online_4\").addEventListener(\n            \"click\", () => { this.onClickMatching(GameMode.OnLineSingle_4); });\n\n        document.getElementById(\"matching_button_multi_2\").addEventListener(\n            \"click\", () => { this.onClickMatching(GameMode.OnLine2Players); });\n        // 3 and 4 players are not supported yet.\n        // document.getElementById(\"matching_button_multi_3\").addEventListener(\n        //     \"click\", () => { this.onClickMatching(GameMode.OnLine2Players); });\n        // document.getElementById(\"matching_button_multi_4\").addEventListener(\n        //     \"click\", () => { this.onClickMatching(GameMode.OnLine2Players); });\n\n        document.getElementById(\"matching_button_watch_1\").addEventListener(\n            \"click\", () => { this.onClickWatch(0); });\n\n        document.getElementById(\"matching_button_watch_2\").addEventListener(\n            \"click\", () => { this.onClickWatch(1); });\n        document.getElementById(\"matching_button_watch_3\").addEventListener(\n            \"click\", () => { this.onClickWatch(2); });\n\n        this.client.startCheckLive((response: string) => {\n            this.onLiveSessionsUpdated(response);\n        });\n\n        // Widgets\n        this.card_widget_view = new HtmlCardView(\"card_widget\");\n        this.dice_widget_view = new HtmlDiceView(\"dice_widget\");\n\n        // Chat\n        this.chat_button_view = new HtmlChatButtonView(\"chat\", \"stamp_box\");\n        this.chat_button_view.callback = (index: number) => {\n            this.onClickStamp(index);\n        };\n\n        // watchers.\n        this.watchers_view = new HtmlViewObject(document.getElementById(\"watchers\"));\n\n        // buttons.\n        this.back_button_view = new HtmlViewObject(document.getElementById(\"back\"));\n        this.back_button_view.addClickListener(() => { this.switchScene(Scene.Home); });\n\n        this.reset_button_view = new HtmlViewObject(document.getElementById(\"reset\"));\n        this.reset_button_view.addClickListener(() => { this.onResetGame(); });\n\n        this.buttons_view = new HtmlButtonsView(\"buttons\", this.dice_widget_view);\n\n        this.buttons_view.dice1.addClickListener(() => { this.onClickDice(1, 0); });\n        this.buttons_view.dice2.addClickListener(() => { this.onClickDice(2, 0); });\n        this.buttons_view.char_card.addClickListener(() => { this.onClickCharacter(); });\n        this.buttons_view.end_turn.addClickListener(() => { this.onClickEndTurn(); });\n\n        // Message view.\n        this.message_view = new HtmlMessageView(\"message\");\n\n        // HtmlPlayersView\n        this.players_view = new HtmlPlayersView(\"players\");\n        this.players_view.callback = (player_id: PlayerId) => {\n            this.onClickPlayer(player_id);\n        }\n\n        // Board\n        this.board_view = new HtmlBoardView(\"board\", row, column);\n        this.board_view.callback = (x: number, y: number) => {\n            this.onClickField(x, y);\n        }\n\n        // HtmlDeckCharView\n        this.deck_char_view = new HtmlDeckCharView(\"deck_char\");\n        this.deck_char_view.callback = (x: number) => {\n            this.onClickDeckField(x, -1);\n        }\n\n        // HtmlCardsView\n        let card_size: number = 10;\n        for (let pid = 0; pid < 4; ++pid) {\n            let cards_view: HtmlCardsView = new HtmlCardsView(`card_${pid}`, card_size);\n            for (let c: number = 0; c < card_size; ++c) {\n                cards_view.cards[c].addClickListener(() => { this.onClickCard(pid, c); });\n            }\n            this.cards_views.push(cards_view);\n        }\n\n        // Landmark cards\n        let landmark_size: number = 5;\n        this.landmarks_view = new HtmlCardsView(\"landmark\", landmark_size);\n        for (let i: number = 0; i < landmark_size; ++i) {\n            this.landmarks_view.cards[i].addClickListener(() => { this.onClickLandmark(i); });\n        }\n\n        // Field card\n        this.field_card_view = new HtmlCardView(\"field_card\");\n\n        // Money motion\n        this.money_motion_view = new HtmlViewObject(document.getElementById(\"money_motion\"));\n\n        this.switchScene(Scene.Home);\n    }\n\n    private resetMatchingButtons(): void {\n        // Reset states.\n        for (let i: number = 1; i <= 3; i++) {\n            let element: HTMLElement = document.getElementById(`matching_button_watch_${i}`);\n            element.innerText = \"準備中\";\n            element.classList.add(\"inactive\");\n        }\n        document.getElementById(\"matching_button_multi_2\").classList.remove(\"promote\");\n        document.getElementById(\"matching_button_multi_3\").classList.remove(\"promote\");\n        document.getElementById(\"matching_button_multi_3\").classList.add(\"inactive\");\n        document.getElementById(\"matching_button_multi_4\").classList.remove(\"promote\");\n        document.getElementById(\"matching_button_multi_4\").classList.add(\"inactive\");\n        document.getElementById(\"matching_button_watch_1\").classList.add(\"inactive\");\n    }\n\n    private switchScene(scene: Scene): void {\n        if (this.scene === scene) {\n            return;\n        }\n\n        this.scene = scene;\n\n        // Hide all\n        document.getElementById(\"home\").style.display = \"none\";\n        this.resetMatchingButtons();\n        this.resetBoard();\n        this.back_button_view.none();\n        this.players_view.none();\n        this.message_view.none();\n        this.board_view.none();\n        this.deck_char_view.none();\n        this.chat_button_view.none();\n        this.watchers_view.none();\n        this.buttons_view.none();\n        this.landmarks_view.none();\n        this.reset_button_view.none();\n\n        for (let cards_view of this.cards_views) {\n            cards_view.none();\n        }\n        this.field_card_view.none();\n\n        if (scene === Scene.Home) {\n            document.getElementById(\"home\").style.display = \"\";\n\n            this.client.startCheckLive((response: string) => {\n                this.onLiveSessionsUpdated(response);\n            });\n            return;\n        }\n\n        if (scene === Scene.Deck) {\n            this.back_button_view.show();\n            this.cards_views[0].show();\n            this.board_view.show();\n            this.deck_char_view.show();\n\n            this.drawDeckBoard();\n            for (let card_view of this.cards_views[0].cards) {\n                card_view.none();\n            }\n            return;\n        }\n\n        if (scene === Scene.Matching) {\n            this.message_view.show();\n            this.reset_button_view.show();\n        }\n\n        if (scene === Scene.Game) {\n            // Show components for game.\n            this.message_view.show();\n            this.board_view.show();\n            this.board_view.redraw();\n            if (this.session != null) {\n                this.drawSession(this.session);\n            }\n            this.landmarks_view.show();\n            if (Protocol.getPlayerCount(this.client.mode) < 2) {\n                this.reset_button_view.show();\n            }\n            // this.chat_button_view.hide();\n            this.chat_button_view.show();\n            return;\n        }\n    }\n\n    private onResetGame(): void {\n        this.client.sendRequest(Request.quit());\n        this.reset();\n        this.switchScene(Scene.Home);\n    }\n\n    private onClickPlayer(target_player_id: PlayerId): void {\n        if (this.session.getPhase() !== Phase.FacilityActionWithInteraction) {\n            return;\n        }\n        const target_facilities: CardId[] = this.session.getTargetFacilities();\n        if (target_facilities.length === 0) {\n            return;\n        }\n        const card_id: CardId = target_facilities[0];\n        this.client.sendRequest(Request.interactFacilityAction(card_id, target_player_id));\n    }\n\n    private onClickDeckField(x: number, y: number): void {\n        let [px, py]: [number, number] = this.clicked_field;\n        if (px === -1) {\n            // this.clicked_filed was not used. Do nothing.\n        }\n        else if (py === -1) {\n            this.deck_char_view.setHighlight(px, false);\n        }\n        else {\n            this.board_view.setClickable(this.clicked_field, false);\n        }\n        this.clicked_field = [x, y];\n\n        if (px === x && py === y) {\n            if (py === -1) {\n                this.deck_maker.removeCharacter(x);\n            }\n            else {\n                this.deck_maker.removeFacility(x, y);\n            }\n            this.drawDeckBoard();\n            return;\n        }\n\n        let i: number = 0;\n        if (y === -1) {\n            this.deck_char_view.setHighlight(x, true);\n            let data_ids: CardDataId[] = CardData.getAvailableCharacters();\n            for (; i < data_ids.length; ++i) {\n                let character: Character = new Character(data_ids[i]);\n                this.cards_views[0].cards[i].drawCharacterCard(character);\n            }\n        }\n        else {\n            this.board_view.setClickable(this.clicked_field, true);\n            let data_ids: CardDataId[] = this.deck_maker.getAvailableFacilities(x);\n            for (; i < data_ids.length; ++i) {\n                let facility: Facility = new Facility(data_ids[i]);\n                this.cards_views[0].cards[i].drawFacilityCard(facility);\n            }\n        }\n\n        for (; i < 10; ++i) {\n            this.cards_views[0].cards[i].none();\n        }\n    }\n\n    private onClickField(x: number, y: number): void {\n        console.log(`clicked: field_${x}_${y}`);\n        if (this.scene === Scene.Home || this.scene === Scene.Matching) {\n            return;\n        }\n\n        if (this.scene === Scene.Deck) {\n            this.onClickDeckField(x, y);\n            return;\n        }\n\n        // Event on game (this.scene === Scene.Game).\n        if (this.clicked_card_view == null) {\n            this.drawFieldInfo(x, y);\n            return;\n        }\n        let card_id: CardId = this.clicked_card_view.getCardId();\n        let event: Event = this.session.getEventBuildFacility(this.client.player_id, x, y, card_id);\n        if (event == null || !event.valid) {\n            return;\n        }\n\n        this.client.sendRequest(Request.buildFacility(x, y, card_id));\n\n        this.event_queue.addEvent(() => {\n            this.buttons_view.hide();  // for the turn end button.\n            this.effectClonedObjectMove(this.clicked_card_view,\n                                        this.clicked_card_view.element_id, `field_${x}_${y}`);\n            return true;\n        }, 1000);\n    }\n\n    private showStamp(stamp_id: number, player_id: number): void {\n        let element_id: string = \"watchers\";\n        if (player_id !== -1) {\n            element_id = this.players_view.players[player_id].element.id;\n        }\n        this.chat_button_view.showStampAt(stamp_id, element_id);\n    }\n\n    private onClickStamp(index: number): void {\n        this.showStamp(index, this.client.player_id);\n        this.client.sendRequest(Request.chat(index));\n    }\n\n    // The format of chat is same with fillRequest(Request.chat(stamp_id)).\n    public updateChat(chat: any): void {\n        if (chat.user_id === this.client.user_id) {\n            return;\n        }\n\n        const player_id: number = this.session.getPlayerId(chat.user_id);\n        this.showStamp(chat.stamp_id, player_id);\n    }\n\n    private isRequestReady(): boolean {\n        // TODO: Create a function in Session.\n        return (this.session.getStep() === this.prev_session.getStep() &&\n                this.client.player_id === this.session.getCurrentPlayerId());\n    }\n\n    private onClickDice(dice_num: number, aim: number): void {\n        if (!this.isRequestReady()) {\n            return;\n        }\n\n        this.client.sendRequest(Request.rollDice(dice_num, aim));\n\n        this.event_queue.addEvent(() => {\n            console.log(\"dice roll.\");\n            let dice_view: HtmlViewObject =\n                (dice_num === 1) ? this.buttons_view.dice1 : this.buttons_view.dice2;\n            dice_view.hide();\n            this.buttons_view.hide();\n\n            // TODO: Make prependDuration to check the response from the server.\n            this.effectDiceMove(dice_view, \"board\");\n            return true;\n        }, 1000);\n    }\n\n    private onClickCharacter(): void {\n        if (this.clicked_card_view == null) {\n            return;\n        }\n\n        const card_id: CardId = this.clicked_card_view.getCardId();\n        this.client.sendRequest(Request.characterCard(card_id));\n\n        this.event_queue.addEvent(() => {\n            this.effectCharacter(this.client.player_id, card_id);\n            return true;\n        }, 2000);\n    }\n\n    private onClickEndTurn(): void {\n        this.client.sendRequest(Request.endTurn());\n        this.event_queue.addEvent(() => {\n            this.buttons_view.hide();\n            return true;\n        }, 500);\n    }\n\n    private onClickMatching(mode: GameMode): void {\n        let name: string = (<HTMLInputElement>document.getElementById(\"matching_name\")).value;\n        if (name.length === 0) {\n            return;\n        }\n        let deck: string = (<HTMLInputElement>document.getElementById(\"deck\")).value;\n\n        this.client.matching(Request.matching(name, mode, deck));\n        let message: string;\n        if (Protocol.isOnlineMode(mode)) {\n            if (Protocol.getPlayerCount(mode) > 1) {\n                message = \"対戦相手を待っています\";\n            }\n            else {\n                message = \"通信中です\";\n            }\n        }\n        else {\n            message = \"準備中です\";\n        }\n        this.message_view.drawMessage(message, this.getPlayerColor(this.client.player_id));\n        this.switchScene(Scene.Matching);\n    }\n\n    private onLiveSessionsUpdated(response: string): void {\n        this.resetMatchingButtons();\n        // Reset states.\n        for (let i: number = 1; i <= 3; i++) {\n            let element: HTMLElement = document.getElementById(`matching_button_watch_${i}`);\n            element.innerText = \"準備中\";\n            element.classList.add(\"inactive\");\n        }\n        document.getElementById(\"matching_button_multi_2\").classList.remove(\"promote\");\n\n        // TODO: session_info should be a class instance.\n        const live_dict: {[key: string]: MatchingInfo} = JSON.parse(response);\n\n        const keys: string[] = Object.keys(live_dict);\n\n        // Update states.\n        let index: number = 1;\n        this.live_session_ids = [];\n        for (let key of keys) {\n            const matching_info: MatchingInfo = live_dict[key];\n            if (matching_info.is_matched) {\n                if (index > 3) {\n                    continue;\n                }\n                this.live_session_ids.push(matching_info.session_id);\n                let element: HTMLElement = document.getElementById(`matching_button_watch_${index}`);\n                element.innerText = Protocol.getGameModeName(matching_info.mode);\n                element.classList.remove(\"inactive\");\n                index++;\n            }\n            else if (matching_info.mode === GameMode.OnLine2Players) {\n                document.getElementById(\"matching_button_multi_2\").classList.add(\"promote\");\n            }\n        }\n    }\n\n    private onClickWatch(index: number): void {\n        if (index >= this.live_session_ids.length) {\n            return;\n        }\n        this.switchScene(Scene.Matching);\n        this.message_view.drawMessage(\"通信中です\", this.getPlayerColor(this.client.player_id));\n        this.client.watchGame(this.live_session_ids[index]);\n    }\n\n    private onClickCard(player: number, card: number): void {\n        // Event on matching.\n        if (this.scene === Scene.Home || this.scene === Scene.Matching) {\n            return;\n        }\n        if (this.scene === Scene.Deck) {\n            let [x, y]: [number, number] = this.clicked_field;\n            if (x === -1) {\n                // this.clicked_field was not used. Do nothing.\n            }\n            else if (y === -1) {\n                // Char\n                let data_id: CardDataId = CardData.getAvailableCharacters()[card];\n                this.deck_maker.setCharacter(x, data_id);\n            }\n            else {\n                let data_id: CardDataId = this.deck_maker.getAvailableFacilities(x)[card];\n                this.deck_maker.setFacility(x, y, data_id);\n            }\n            this.drawDeckBoard();\n            return;\n        }\n\n        // Event on game (this.scene === Scene.Game).\n        let clicked_card_id: CardId = this.cards_views[player].cards[card].getCardId();\n        let phase: Phase = this.session.getPhase();\n        let is_char: boolean = this.session.isCharacter(clicked_card_id);\n\n        let is_valid: boolean = ((phase === Phase.CharacterCard) && is_char ||\n                                 (phase === Phase.BuildFacility) && !is_char);\n        if (!is_valid) {\n            return;\n        }\n\n        console.log(`clicked: card_${player}_${card}`);\n        if (this.clicked_card_view && clicked_card_id === this.clicked_card_view.getCardId()) {\n            this.resetCards();\n            this.drawBoard(this.session);  // TODO: draw click fields only.\n            return;\n        }\n\n        this.resetCards();\n        this.clicked_card_view = this.cards_views[player].cards[card];\n        this.clicked_card_view.setHighlight(true);\n\n        this.drawBoard(this.session);\n\n        if (phase === Phase.CharacterCard) {\n            this.buttons_view.char_card.setClickable(true);\n        }\n\n        if (phase === Phase.BuildFacility) {\n            for (let area of this.session.getFacility(clicked_card_id).getArea()) {\n                let x: number = area - 1;\n                for (let y: number = 0; y < 5; ++y) {  // TODO: y can be other than 5.\n                    let event: Event =\n                        this.session.getEventBuildFacility(player, x, y, clicked_card_id);\n                    if (event && event.valid) {\n                        this.board_view.setClickable([x, y], true);\n                    }\n                }\n            }\n        }\n    }\n\n    private onClickLandmark(card: number): void {\n        if (this.session.getPhase() !== Phase.BuildFacility) {\n            return;\n        }\n\n        console.log(`clicked: landmark_${card}`);\n\n        let clicked_card_id: CardId = this.session.getLandmarks()[card];\n        if (this.clicked_card_view && clicked_card_id === this.clicked_card_view.getCardId()) {\n            this.resetCards();\n            this.drawBoard(this.session);  // TODO: draw click fields only.\n            return;\n        }\n\n        if (this.session.getOwnerId(clicked_card_id) !== -1) {\n            return;\n        }\n\n        this.resetCards();\n        this.clicked_card_view = this.landmarks_view.cards[card];\n        this.clicked_card_view.setHighlight(true);\n\n        this.drawBoard(this.session);\n\n        this.board_view.setClickable(this.session.getPosition(clicked_card_id), true);\n    }\n\n    private getPlayerColor(player_id: PlayerId): string {\n        if (player_id === -1 || player_id > COLOR_PLAYERS.length) {\n            return COLOR_FIELD;\n        }\n        return COLOR_PLAYERS[player_id];\n    }\n\n    private getFacilityColor(facility: Facility): string {\n        if (!facility) {\n            return COLOR_FIELD;\n        }\n        let type: FacilityType = facility.type;\n        switch(type) {\n            case FacilityType.Gray:\n                return COLOR_GRAY;\n            case FacilityType.Blue:\n                return COLOR_BLUE;\n            case FacilityType.Green:\n                return COLOR_GREEN;\n            case FacilityType.Red:\n                return COLOR_RED;\n            case FacilityType.Purple:\n                return COLOR_PURPLE;\n        }\n    }\n\n    private getDiceDeltaMessage(delta: number): string {\n        if (delta === 0) {\n            return \"\";\n        }\n        let unit: string = (delta > 0) ? \"+\" : \"\";\n        return `(${unit}${delta})`;\n    }\n\n    private getDiceResultMessage(dice: DiceResult, pid: PlayerId): string {\n        let faces: string[] = [\"\", \"⚀\", \"⚁\", \"⚂\", \"⚃\", \"⚄\", \"⚅\"];\n\n        let d1: number = dice.dice1;\n        let d2: number = dice.dice2;\n        let delta: string = this.getDiceDeltaMessage(dice.delta);\n        let name: string = this.session.getPlayer(pid).name;\n        return `${name} のサイコロは ${faces[d1]} ${faces[d2]} ${delta}: ${dice.result()} でした。`;\n    }\n\n    private resetCards(): void {\n        if (this.clicked_card_view) {\n            this.clicked_card_view.setHighlight(false);\n            this.clicked_card_view = null;\n        }\n    }\n\n    public updateView(session: Session, player_id: PlayerId): void {\n        if (this.scene === Scene.Matching) {\n            this.session = session;\n            this.prev_step = session.getStep() - 1;\n            this.prev_session = session;\n            this.switchScene(Scene.Game);\n            return;\n        }\n\n        if (this.scene !== Scene.Game) {\n            return;\n        }\n        this.session = session;\n        // Show event animations.\n        this.drawEvents();\n    }\n\n    public drawCards(session: Session): void {\n        let players: Player[] = session.getPlayers();\n\n        // Update cards.\n        for (let i: number = 0; i < players.length; ++i) {\n            if (this.client.player_id !== i) {\n                this.cards_views[i].none();\n                continue;\n            }\n            let card_ids: CardId[] = session.getSortedHand(i);\n            this.cards_views[i].draw(session, card_ids);\n            this.cards_views[i].show();\n        }\n        for (let i: number = players.length; i < 4; ++i) {\n            this.cards_views[i].none();\n        }\n\n        // Update landmarks.\n        let landmark_ids: CardId[] = session.getLandmarks();\n        this.landmarks_view.draw(session, landmark_ids);\n        this.landmarks_view.show();\n\n        this.resetCards();  // Nice to check if built or not?\n    }\n\n    public drawFieldInfo(x, y): void {\n        let card_id: CardId = this.session.getCardIdOnBoard(x, y);\n        if (card_id === -1 || card_id === this.field_card_view.getCardId()) {\n            this.field_card_view.none();\n            this.field_card_view.setCardId(-1);\n            return;\n        }\n\n        this.field_card_view.draw(this.session, card_id);\n        this.field_card_view.showAt(this.getPosition((x < 6) ? \"click_10_1\" : \"click_0_1\"));\n    }\n\n    private resetBoard(): void {\n        // TODO: Do more efficient way.\n        this.drawBoard(new Session(-1));\n    }\n\n    public drawBoard(session: Session): void {  // session may take a different value.\n        const board: Board = session.getBoard();\n        for (let y: number = 0; y < board.row; ++y) {\n            for (let x: number = 0; x < board.column; ++x) {\n                const facility_id: CardId = board.getRawCardId(x, y);\n                const owner_id: PlayerId = session.getOwnerId(facility_id);\n                let facility: Facility =\n                    (facility_id < 0) ? null : session.getFacility(facility_id);\n                this.drawField(x, y, facility_id, facility, owner_id);\n            }\n        }\n\n        if (session.getCurrentPlayerId() === this.client.player_id &&\n            session.getPhase() === Phase.FacilityActionWithInteraction &&\n            session.getTargetFacilities().length > 0) {\n            const facility_id: CardId = session.getTargetFacilities()[0];\n            const [x, y]: [number, number] = session.getPosition(facility_id);\n            this.board_view.setHighlight([x, y], COLOR_CLICKABLE);\n        }\n    }\n\n    public drawDeckBoard(): void {\n        const board: Board = this.deck_maker.board;\n        for (let y: number = 0; y < board.row; ++y) {\n            for (let x: number = 0; x < board.column; ++x) {\n                const facility_id: CardId = board.getRawCardId(x, y);\n                const owner_id: PlayerId = 0;\n                let facility: Facility =\n                    (facility_id < 0) ? null : this.deck_maker.getFacility(facility_id);\n                this.drawField(x, y, facility_id, facility, owner_id);\n            }\n        }\n        for (let x: number = 0; x < 5; ++x) {\n            this.deck_char_view.drawCharacter(x, this.deck_maker.getCharacter(x));\n        }\n\n        let [x, y]: [number, number] = this.clicked_field;\n        if (y !== -1) {\n            this.board_view.setClickable(this.clicked_field, true);\n        }\n        document.getElementById(\"deck\").innerText =\n            JSON.stringify(this.deck_maker.getDeck());\n    }\n\n    private drawField(x: number, y: number,\n                      facility_id: CardId, facility: Facility, owner_id: PlayerId): void {\n        let field: HTMLElement = document.getElementById(`field_${x}_${y}`);\n        this.board_view.setClickable([x, y], false);\n\n        (<HTMLTableCellElement>field).colSpan = 1;\n        field.style.display = \"\";\n\n        if (facility_id === -1) {\n            field.innerText = \"\";\n            field.style.backgroundColor = COLOR_FIELD;\n            field.style.borderColor = COLOR_FIELD;\n            return;\n        }\n\n        if (facility_id === -2) {\n            field.style.display = \"none\";\n            return;\n        }\n\n        // (ownder_id === -1) means a prebuild landmark.\n        let owner_color: string =\n            (owner_id === -1) ? COLOR_LANDMARK : this.getPlayerColor(owner_id);\n\n        field.innerText = facility.getName();\n        field.style.display = \"\";\n        field.style.backgroundColor = owner_color;\n        field.style.borderColor = this.getFacilityColor(facility);\n\n        (<HTMLTableCellElement>field).colSpan = facility.size;\n    }\n\n    // TODO: move this function to other place/class.\n    private hasCharacterCard(session: Session, player_id: PlayerId): boolean {\n        let cards: CardId[] = session.getSortedHand(player_id);\n        return session.isCharacter(cards[cards.length - 1]);\n    }\n\n    public drawStatusMessage(session: Session): boolean {  // TODO: rename it.\n        let players: Player[] = session.getPlayers();\n        let player_id: PlayerId = session.getCurrentPlayerId();\n\n        // Update message.\n        let current_player: Player = players[player_id];\n        let name: string =  current_player.name;\n        let phase: Phase = session.getPhase();\n        let message: string = \"\";\n        let color: string = this.getPlayerColor(player_id);\n        if (phase === Phase.StartGame) {\n            message = \"マッチング中です\";\n            this.message_view.drawMessage(message, color);\n            return true;\n        }\n        if (phase === Phase.CharacterCard) {\n            let delta: string = this.getDiceDeltaMessage(session.getDiceDelta());\n            message = `${name} のキャラカードまたはサイコロ${delta}です`;\n            this.message_view.drawMessage(message, color);\n            return true;\n        }\n        if (phase === Phase.DiceRoll) {\n            let delta: string = this.getDiceDeltaMessage(session.getDiceDelta());\n            message = `${name} のサイコロ${delta}です`;\n            this.message_view.drawMessage(message, color);\n            return true;\n        }\n        if (phase === Phase.BuildFacility) {\n            message = `${name} の建設です`;\n            this.message_view.drawMessage(message, color);\n            return true;\n        }\n        if (phase === Phase.EndGame) {\n            let events: Event[] = session.getEvents();\n            for (let event of events) {\n                if (event.type === EventType.Quit) {\n                    message = `${players[event.player_id].name} が切断しました`;\n                    this.message_view.drawMessage(message, this.getPlayerColor(event.player_id));\n                    return true;\n                }\n            }\n\n            let winner: string = session.getPlayer(session.getWinner()).name;\n            message = `${name} の勝ちです`;\n            this.message_view.drawMessage(message, this.getPlayerColor(session.getWinner()));\n            this.reset_button_view.show();\n            return true;\n        }\n        return false;\n    }\n\n    private drawWatchers(session: Session): void {\n        const watchers_length: number = session.getWatchers().length;\n        if (watchers_length === 0) {\n            this.watchers_view.hide();\n            return;\n        }\n        this.watchers_view.element.innerText = `${watchers_length}人観戦中`;\n        this.watchers_view.show();\n    }\n\n    private drawSession(session: Session): void {\n        this.drawStatusMessage(session);\n        this.players_view.draw(session);\n        this.drawBoard(session);\n        this.drawCards(session);\n        this.drawWatchers(session);\n        // Update buttons.\n        this.buttons_view.draw(session, this.client.player_id);\n\n        this.prev_session = session;\n    }\n\n    public drawEvents(): void {\n        this.event_queue.addEvent(() => {\n            if (!this.drawEventsByStep()) {\n                this.drawSession(this.session);\n                return false;\n            }\n            this.drawEvents();\n            return true;\n        }, 2000);\n    }\n\n    private drawEventsByStep(): boolean {\n        let events: Event[] = this.session.getEvents();\n        let step: number = -1;\n        let i: number = 0;\n        for (; i < events.length; ++i) {\n            // Skip passed events.\n            if (events[i].step > this.prev_step) {\n                step = events[i].step;\n                break;\n            }\n        }\n\n        if (step === -1) {\n            return false;\n        }\n\n        let handled: boolean = false;\n        for (; i < events.length; ++i) {\n            let event: Event = events[i];\n            if (event.step !== step) {\n                if (handled) {\n                    break;\n                }\n                // The previous step does not have handled events. Go to the next step.\n                step = event.step;\n            }\n\n            if (this.drawEvent(event)) {\n                handled = true;\n            }\n        }\n        this.prev_step = step;\n\n        if (handled) {\n            return true;\n        }\n        return false;\n    }\n\n    private drawEvent(event: Event): boolean {\n        // Draw cards\n        if (event.type === EventType.Draw) {  // TODO: Change the event type to StartTurn?\n            let current_player: Player = this.session.getPlayer(event.player_id);\n            let message = `${current_player.name} のターンです`;\n            let color: string = this.getPlayerColor(event.player_id);\n            this.message_view.drawMessage(message, color);\n\n            if (event.player_id === this.client.player_id) {\n                this.effectCardDeals(event.player_id, event.target_card_ids);\n            }\n            return true;\n        }\n\n        // Dice\n        if (event.type === EventType.Dice) {\n            if (this.dice_roll_view) {\n                let dices = this.dice_roll_view.element.getElementsByClassName(\"dice\");\n                for (let i: number = 0; i < dices.length; ++i) {\n                    let pip: number = (i === 0) ? event.dice.dice1 : event.dice.dice2;\n                    let dice: HTMLElement = <HTMLElement>dices[i];\n                    dice.addEventListener(\"animationiteration\", () => {\n                        dice.style.animation = `roll_end${pip} ${0.8 + i / 10}s ease-out forwards`;\n                    });\n                }\n                window.setTimeout(() => {\n                    this.dice_roll_view.remove();\n                    this.dice_roll_view = null;\n                }, 2000);\n            }\n\n            let message: string = this.getDiceResultMessage(event.dice, event.player_id);\n            let color: string = this.getPlayerColor(event.player_id);\n            window.setTimeout(() => {\n                this.board_view.animateDiceResult(event.dice.result(), color);\n                this.message_view.drawMessage(message, color);\n            }, 1500);\n            return true;\n        }\n\n        // Character card\n        if (event.type === EventType.Character) {\n            let handled: boolean = false;\n            // Own card's effect was already done.\n            if (event.player_id !== this.client.player_id) {\n                this.effectCharacter(event.player_id, event.card_id);\n                handled = true;\n            }\n            if (this.session.getCharacter(event.card_id).type === CharacterType.DrawCards) {\n                this.effectCardDeals(event.player_id, event.target_card_ids);\n                handled = true;\n            }\n            return handled;\n        }\n\n        if (event.type === EventType.Salary) {\n            for (let pid = 0; pid < event.moneys.length; pid++) {\n                let money: number = event.moneys[pid];\n                if (money === 0) {\n                    continue;\n                }\n                this.players_view.players[pid].addMoney(money);\n                let name: string = this.session.getPlayer(pid).name;\n                let message = `${name} に給料 ${money} が入りました`;\n                let color: string = this.getPlayerColor(pid);\n                this.message_view.drawMessage(message, color);\n            }\n            return true;\n        }\n\n        if (event.type === EventType.Build) {\n            if (event.card_id === -1) {  // Pass.\n                let name: string = this.session.getPlayer(event.player_id).name;\n                let message = `${name} は何も建設しませんでした。`;\n                let color: string = this.getPlayerColor(event.player_id);\n                this.message_view.drawMessage(message, color);\n                return true;\n            }\n\n            let [x, y]: [number, number] = this.session.getPosition(event.card_id);\n            let facility: Facility = this.session.getFacility(event.card_id);\n            this.prev_session.getBoard().removeCards(x, y, facility.size);\n            this.prev_session.getBoard().setCardId(x, y, event.card_id, facility.size);\n            if (this.prev_session.isFacility(event.card_id)) {\n                this.prev_session.getPlayerCards(event.player_id).moveHandToField(event.card_id);\n            }\n            // Draw the board after money motion.\n            window.setTimeout(() => {\n                this.drawBoard(this.prev_session);\n                this.drawCards(this.prev_session);\n            }, 1000);\n        }\n\n        const money_motion: EventType[] = [\n            EventType.Blue,\n            EventType.Green,\n            EventType.Red,\n            EventType.Purple,\n            EventType.Build,\n        ];\n        if (money_motion.indexOf(event.type) !== -1) {\n            // Money motion\n            let [x, y]: [number, number] = this.session.getPosition(event.card_id);\n\n            for (let pid = 0; pid < event.moneys.length; pid++) {\n                let money: number = event.moneys[pid];\n                if (money === 0) {\n                    continue;\n                }\n                let delay: number = 0;\n                if ([EventType.Red, EventType.Purple, EventType.Build].indexOf(event.type) !== -1 &&\n                    money > 0) {\n                    delay = 1000;\n                }\n                window.setTimeout(() => {\n                    this.drawMoneyMotion(money, pid, x, y);\n                    this.board_view.setHighlight([x, y], COLOR_CLICKABLE);\n                    window.setTimeout(() => {\n                        this.board_view.setHighlight([x, y], \"transparent\");\n                    }, 1000);\n                }, delay);\n            }\n        }\n\n        if (event.type === EventType.Interaction) {\n            const color: string = this.getPlayerColor(event.player_id);\n            const position: [number, number] = this.session.getPosition(event.card_id);\n            this.board_view.setHighlight(position, COLOR_CLICKABLE);\n\n            if (event.player_id === this.client.player_id) {\n                this.message_view.drawMessage(\"対象プレイヤーを選択してください\", color);\n                this.players_view.setClickableForPlayer(event.player_id);\n            }\n            else {\n                this.message_view.drawMessage(\"対象プレイヤーを選択中です\", color);\n            }\n        }\n        return true;\n    }\n\n    private drawMoneyMotion(money: number, player_id: PlayerId, x: number, y: number): void {\n        if (money > 0) {\n            this.effectMoneyMotion(`field_${x}_${y}`, `player_${player_id}`, money);\n        }\n        else if (money < 0) {\n            this.effectMoneyMotion(`player_${player_id}`, `field_${x}_${y}`, money);\n        }\n        this.players_view.players[player_id].addMoney(money);\n    }\n\n    private getPosition(element_id: string): [number, number] {\n        let rect: ClientRect = document.getElementById(element_id).getBoundingClientRect();\n        return [rect.left, rect.top];\n    }\n\n    private effectCharacter(pid: PlayerId, card_id: CardId): void {\n        let effect_view: HtmlViewObject = null;\n        if (this.client.player_id === pid) {\n            let card_view: HtmlCardView = this.cards_views[pid].getCardView(card_id);\n            if (card_view == null) {\n                return;  // Something is wrong.\n            }\n            card_view.hide();\n            this.effectClonedObjectMove(card_view, card_view.element_id, \"board\");\n        }\n        else {\n            this.card_widget_view.draw(this.session, card_id);\n            this.effectClonedObjectMove(this.card_widget_view, `player_${pid}`, \"board\");\n        }\n    }\n\n    private effectDiceMove(node: HtmlViewObject, dest_id: string): void {\n        let dice_view: HtmlViewObject = node.clone();\n        dice_view.element.style.background = \"transparent\";\n        dice_view.showAt(dice_view.getPositionAlignedWithElementId(node.element.id));\n        let dices = dice_view.element.getElementsByClassName(\"dice\");\n        for (let i: number = 0; i < dices.length; ++i) {\n            (<HTMLElement>dices[i]).style.animation = `roll ${0.8 + i / 10 }s linear infinite`;\n        }\n        dice_view.animateMoveToElementId(dest_id, 1000);\n        this.dice_roll_view = dice_view;\n    }\n\n    private effectClonedObjectMove(node: HtmlViewObject, id1: string, id2: string): void {\n        let new_view: HtmlViewObject = node.clone();\n        new_view.showAt(new_view.getPositionAlignedWithElementId(id1));\n        new_view.animateMoveToElementId(id2);\n        window.setTimeout(() => { new_view.remove(); }, 1500);\n    }\n\n    private effectCardDeal(pid: PlayerId, card_id: CardId): void {\n        this.card_widget_view.draw(this.session, card_id);\n        this.effectClonedObjectMove(this.card_widget_view, `player_${pid}`, `card_${pid}_0`);\n    }\n\n    private effectCardDeals(player_id: PlayerId, card_ids: CardId[]): void {\n        if (this.client.player_id !== player_id) {\n            return;\n        }\n        let timeout: number = 1000;\n        for (let card_id of card_ids) {\n            window.setTimeout(() => {\n                this.effectCardDeal(player_id, card_id);\n            }, timeout);\n            timeout += 500;\n        }\n    }\n\n    private effectMoneyMotion(element_from: string, element_to: string, money: number): void {\n        this.money_motion_view.element.innerHTML = `💸 ${money}`;\n        this.effectClonedObjectMove(this.money_motion_view, element_from, element_to);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/html_view.ts","import { PlayerId, Player } from \"./board\";\nimport { CardId, Facility, FacilityType, Character } from \"./facility\";\nimport { Phase, Event, EventType, Session } from \"./session\";\nimport { PlayerCards } from \"./card_manager\";\nimport { DiceResult } from \"./dice\";\n\n// TODO: Move it to a new file for util.\nconst COLOR_FIELD: string = \"#FFE082\";\nconst COLOR_LANDMARK: string = \"#B0BEC5\";\nconst COLOR_CLICKABLE: string = \"#FFCA28\";\nconst COLOR_INACTIVE: string = \"#EEEEEE\";\nconst COLOR_HIGHTLIGHT_CARD: string = \"#FFE082\";\nconst COLOR_CHARACTER: string = \"#FFF9C4\";\nconst COLOR_PLAYERS: string[] = [\"#909CC2\", \"#D9BDC5\", \"#90C290\", \"#9D8189\"];\nconst COLOR_GRAY: string = \"#B0BEC5\";\nconst COLOR_BLUE: string = \"#90CAF9\";\nconst COLOR_GREEN: string = \"#A5D6A7\";\nconst COLOR_RED: string = \"#EF9A9A\";\nconst COLOR_PURPLE: string = \"#B39DDB\";\n\nfunction getFacilityColor(facility: Facility): string {\n    if (!facility) {\n        return COLOR_FIELD;\n    }\n    let type: FacilityType = facility.type;\n    switch(type) {\n        case FacilityType.Gray:\n            return COLOR_GRAY;\n        case FacilityType.Blue:\n            return COLOR_BLUE;\n        case FacilityType.Green:\n            return COLOR_GREEN;\n        case FacilityType.Red:\n            return COLOR_RED;\n        case FacilityType.Purple:\n            return COLOR_PURPLE;\n    }\n}\n\nfunction getPlayerColor(player_id: PlayerId): string {\n    if (player_id === -1 || player_id > COLOR_PLAYERS.length) {\n        return COLOR_FIELD;\n    }\n    return COLOR_PLAYERS[player_id];\n}\n\n\nexport enum Visibility {\n    Visible,\n    Invisible,\n    None,\n}\n\nexport class HtmlViewObject {\n    constructor(readonly element: HTMLElement) {\n    }\n\n    public setVisibility(visibility: Visibility): void {       \n        if (visibility === Visibility.Visible) {\n            this.element.style.visibility = \"inherit\";\n            this.element.style.display = \"\";\n            return;\n        }\n        if (visibility === Visibility.Invisible) {\n            this.element.style.visibility = \"hidden\";\n            this.element.style.display = \"\";\n            return;\n        }\n        if (visibility === Visibility.None) {\n            this.element.style.display = \"none\";\n            return;\n        }\n    }\n\n    public show(): void {\n        this.setVisibility(Visibility.Visible);\n    }\n\n    public hide(): void {\n        this.setVisibility(Visibility.Invisible);\n    }\n\n    public none(): void {  // TODO: Rename it to a better one.\n        this.setVisibility(Visibility.None);\n    }\n\n    public clone(): HtmlViewObject {\n        let new_node: Node = this.element.cloneNode(true);\n        let new_element: HTMLElement = <HTMLElement>document.body.appendChild(new_node);\n        return new HtmlViewObject(new_element);\n    }\n\n    public remove(): void {\n        document.body.removeChild(this.element);\n    }\n\n    public getPosition(): [number, number] {\n        let rect: ClientRect = this.element.getBoundingClientRect();\n        return [rect.left, rect.top];\n    }\n\n    public addClickListener(callback: () => void) {\n        this.element.addEventListener(\"click\", callback);\n    }\n\n    public showAt([x, y]: [number, number]): void {\n        // The parent element should be relative.\n        this.element.style.zIndex = \"2\";\n        this.element.style.position = \"absolute\";\n        this.element.style.left = x + \"px\";\n        this.element.style.top = y + \"px\";\n        this.show();\n    }\n\n    public getPositionAligned(dst: ClientRect): [number, number] {\n        const src: ClientRect = this.element.getBoundingClientRect();\n        const x: number = dst.left + (dst.width  - src.width)  / 2;\n        const y: number = dst.top  + (dst.height - src.height) / 2;\n        return [x, y];\n    }\n\n    public getPositionAlignedWithElementId(element_id): [number, number] {\n        const rect: ClientRect = document.getElementById(element_id).getBoundingClientRect();\n        return this.getPositionAligned(rect);\n    }\n\n    public animateMoveToElementId(element_id: string, duration: number = 1000): void {\n        this.animateMoveTo(this.getPositionAlignedWithElementId(element_id), duration);\n    }\n\n    public animateMoveTo([x, y]: [number, number], duration: number = 1000): void {\n        let rect_from = this.element.getBoundingClientRect();\n        let diff_x: number = x - rect_from.left;\n        let diff_y: number = y - rect_from.top;\n\n        this.element.style.visibility = \"visible\";\n        this.element.style.zIndex = \"2\";\n        this.element.style.position = \"absolute\";\n        this.element.style.top = rect_from.top + \"px\";\n        this.element.style.left = rect_from.left + \"px\";\n\n        this.element.style.transitionDuration = `${duration / 1000}s`;\n        this.element.style.transitionTimingFunction = \"ease\";\n        this.element.style.transform = `translate(${diff_x}px, ${diff_y}px)`;\n    }\n}\n\nexport class HtmlCardsView extends HtmlViewObject {\n    readonly cards: HtmlCardView[] = [];\n    private card_ids: CardId[] = [];\n\n    constructor(readonly element_id: string, readonly max_size: number) {\n        super(document.getElementById(element_id));\n\n        let base: HTMLElement = document.getElementById(\"card_widget\");\n\n        for (let i: number = 0; i < this.max_size; ++i) {\n            let new_node: Node = base.cloneNode(true);\n            let new_element: HTMLElement = <HTMLElement>this.element.appendChild(new_node);\n            new_element.id = `${element_id}_${i}`;\n            let card_view: HtmlCardView = new HtmlCardView(new_element.id);\n            this.cards.push(card_view);\n            card_view.none();\n        }\n    }\n\n    public draw(session: Session, card_ids: CardId[]): void {\n        for (let i: number = 0; i < this.max_size; ++i) {\n            this.cards[i].draw(session, (i < card_ids.length) ? card_ids[i] : -1);\n        }\n    }\n\n    public getCardView(card_id: CardId): HtmlCardView {\n        for (let card of this.cards) {\n            if (card.getCardId() === card_id) {\n                return card;\n            }\n        }\n        return null;\n    }\n\n    // TODO: Not necessary?\n    public setCardIds(card_ids: CardId[]): void {\n        this.card_ids = card_ids;\n        let i: number = 0;\n        for (; i < card_ids.length; ++i) {\n            this.cards[i].setCardId(card_ids[i]);\n        }\n        for (; i < this.max_size; ++i) {\n            this.cards[i].setCardId(-1);\n        }\n    }\n}\n\nexport class HtmlCardView extends HtmlViewObject {\n    private card_id: CardId = -1;\n    private element_name: HTMLElement;\n    private element_cost: HTMLElement;\n    private element_description: HTMLElement;\n\n    constructor(readonly element_id: string) {\n        super(document.getElementById(element_id));\n        this.element_name = <HTMLElement>this.element.getElementsByClassName(\"card_name\")[0];\n        this.element_cost = <HTMLElement>this.element.getElementsByClassName(\"card_cost\")[0];\n        this.element_description = <HTMLElement>this.element.getElementsByClassName(\"card_description\")[0];\n    }\n\n    public setCardId(card_id: CardId): void {\n        this.card_id = card_id;\n    }\n\n    public getCardId(): CardId {\n        return this.card_id;\n    }\n\n    public draw(session: Session, card_id: CardId): void {\n        this.card_id = card_id;\n\n        // No card\n        if (card_id === -1) {\n            this.none();\n            return;\n        }\n\n        // Character\n        if (session.isCharacter(card_id)) {\n            let character: Character = session.getCharacter(card_id);\n            this.drawCharacterCard(character);\n            return;\n        }\n\n        // Landmark\n        if (session.isLandmark(card_id)) {\n            let landmark: Facility = session.getFacility(card_id);\n            let owner_id: PlayerId = session.getOwnerId(card_id);\n            this.drawLandmarkCard(landmark, owner_id);\n            return;\n        }\n\n        // Facility\n        let facility: Facility = session.getFacility(card_id);\n        this.drawFacilityCard(facility);\n    }\n\n    public drawFacilityCard(facility: Facility): void {\n        let area: string = this.getFacilityAreaString(facility);\n        this.element_name.innerText = `${area} ${facility.getName()}`;\n        this.element_cost.innerText = String(facility.getCost());\n        this.element_description.innerText = facility.getDescription();\n        this.element.style.backgroundColor = getFacilityColor(facility);\n        this.show();\n    }\n\n    public drawCharacterCard(character: Character): void {\n        this.element_name.innerText = character.getName();\n        this.element_cost.innerText = \"\";\n        this.element_description.innerText = character.getDescription();\n        this.element.style.backgroundColor = COLOR_CHARACTER;\n        this.show();\n    }\n\n    public drawLandmarkCard(landmark: Facility, owner_id: PlayerId): void {\n        this.element_name.innerText = landmark.getName();\n        this.element_cost.innerText = String(landmark.getCost());\n        this.element_description.innerText = landmark.getDescription();\n        if (owner_id === -1) {\n            this.element.style.backgroundColor = getFacilityColor(landmark);\n        } else {\n            this.element.style.backgroundColor = getPlayerColor(owner_id);\n        }\n        this.show();\n    }\n\n    public setHighlight(is_highlight: boolean): void {\n        this.element.style.borderColor = is_highlight ? COLOR_HIGHTLIGHT_CARD : \"#EEEEEE\";\n    }\n\n    private getFacilityAreaString(facility: Facility): string {\n        const area_name: string[] =\n            [\"\", \"①\", \"②\", \"③\", \"④\", \"⑤\", \"⑥\", \"⑦\", \"⑧\", \"⑨\", \"⑩\", \"⑪\", \"⑫\", \"\"];\n\n        let area: string = facility.getArea().map((i) => {\n            if (facility.size === 2) {  // TODO: support more than 2, if necessary.\n                return `${area_name[i]}+${area_name[i + 1]}`;\n            }\n            return area_name[i];\n        }).join(\",\");\n\n        return area;\n    }\n}\n\nexport class HtmlPlayersView extends HtmlViewObject {\n    readonly players: HtmlPlayerView[] = [];\n    private players_length: number = 0;\n    public callback: (player_id: PlayerId) => void;\n\n    constructor(readonly element_id: string) {\n        super(document.getElementById(element_id));\n        for (let pid = 0; pid < 4; ++pid) {\n            let player_view: HtmlPlayerView = new HtmlPlayerView(pid);\n            player_view.callback = (player_id: PlayerId) => {\n                this.onClick(player_id);\n            }\n            this.players.push(player_view);\n        }\n    }\n\n    private onClick(player_id: PlayerId): void {\n        for (let player of this.players) {\n            player.setClickable(false);\n        }\n\n        this.callback(player_id);\n    }\n\n    public draw(session: Session): void {\n        let players: Player[] = session.getPlayers();\n        this.players_length = players.length;\n        for (let i: number = 0; i < this.players_length; ++i) {\n            this.players[i].draw(session);\n        }\n        for (let i: number = this.players_length; i < 4; ++i) {\n            this.players[i].hide();\n        }\n        this.show();\n    }\n\n    public setClickableForPlayer(player_id: PlayerId): void {\n        for (let i: number = 0; i < this.players_length; ++i) {\n            this.players[i].setClickable(player_id !== i);\n        }\n    }\n}\n\nexport class HtmlPlayerView extends HtmlViewObject {\n    readonly player_id: PlayerId;\n    private element_avatar: HTMLElement;\n    private element_name: HTMLElement;\n    private element_money: HTMLElement;\n    private element_salary: HTMLElement;\n    private element_hand: HTMLElement;\n    private element_talon: HTMLElement;\n    private money_animation_timer = null;\n    private money: number = 0;\n    private is_clickable: boolean = false;\n    public callback: (player_id: PlayerId) => void;\n\n    constructor(player_id: PlayerId) {\n        super(document.getElementById(`player_${player_id}`));\n        this.player_id = player_id;\n        this.element_avatar = <HTMLElement>this.element.getElementsByClassName(\"player_avatar\")[0];\n        this.element_name   = <HTMLElement>this.element.getElementsByClassName(\"player_name\")[0];\n        this.element_money  = <HTMLElement>this.element.getElementsByClassName(\"player_money\")[0];\n        this.element_salary = <HTMLElement>this.element.getElementsByClassName(\"player_salary\")[0];\n        this.element_hand   = <HTMLElement>this.element.getElementsByClassName(\"player_hand\")[0];\n        this.element_talon  = <HTMLElement>this.element.getElementsByClassName(\"player_talon\")[0];\n        this.addClickListener(() => { this.onClick(); });\n    }\n\n    private onClick(): void {\n        if (this.is_clickable) {\n            this.callback(this.player_id);\n        }\n    }\n\n    public draw(session: Session): void {\n        this.show();\n\n        let player: Player = session.getPlayer(this.player_id);\n\n        // Avatar\n        const npc_avatars: string[] = [\"⛄\", \"👻\",  \"👾\", \"🗿\"];\n        let avatar: string = \"😺\";\n        if (player.isAuto()) {\n            avatar = npc_avatars[this.player_id];\n        }\n        this.element_avatar.innerText = avatar;\n\n        this.element_name.innerText = player.name;\n        this.element_salary.innerHTML = String(player.salary);\n        let cards: PlayerCards = session.getPlayerCards(this.player_id);\n        this.element_hand.innerHTML = String(cards.getHandSize());\n        this.element_talon.innerHTML = String(cards.getTalonSize());\n\n        this.setMoney(player.getMoney());\n    }\n\n    public setClickable(is_clickable: boolean): void {\n        this.is_clickable = is_clickable;\n        if (is_clickable) {\n            this.element.style.backgroundColor = COLOR_CLICKABLE;\n        } else {\n            this.element.style.backgroundColor = getPlayerColor(this.player_id);\n        }\n    }\n\n    public setMoney(money: number): void {\n        this.money = money;\n        this.animateMoney(money);\n    }\n\n    public addMoney(delta: number): void {\n        this.money += delta;\n        this.animateMoney(this.money);\n    }\n\n    // TODO: move this logic to HtmlViewObject ?\n    private animateMoney(money: number): void {\n        if (this.money_animation_timer) {\n            clearInterval(this.money_animation_timer);\n        }\n        this.money_animation_timer = setInterval(() => {\n            let current_money = Number(this.element_money.innerText);\n            if (current_money === money) {\n                clearInterval(this.money_animation_timer);\n                this.money_animation_timer = null;\n                return;\n            }\n\n            if (current_money > money) {\n                current_money -= Math.min(10, current_money - money);\n            }\n            else {\n                current_money += Math.min(10, money - current_money);\n            }\n            this.element_money.innerText = String(current_money);\n        }, 5);\n    }\n}\n\nexport class HtmlMessageView extends HtmlViewObject {\n    constructor(element_id: string) {\n        super(document.getElementById(element_id));\n    }\n\n    public drawMessage(message: string, color: string = COLOR_FIELD): void {\n        this.element.innerText = `🎲 ${message} 🎲`;\n        this.element.style.backgroundColor = color;\n    }\n}\n\nexport class HtmlBoardView extends HtmlViewObject {\n    readonly clickable_fields: HtmlClickableFieldsView;\n    public callback: (x: number, y: number) => void;\n\n    constructor(element_id: string, row: number, column: number) {\n        super(document.getElementById(element_id));\n\n        this.clickable_fields = new HtmlClickableFieldsView(\"click\", row, column);\n        for (let y: number = 0; y < row; ++y) {\n            for (let x: number = 0; x < column; ++x) {\n                this.clickable_fields.fields[x][y].addClickListener(\n                    () => { this.onClick(x, y); });\n            }\n        }\n    }\n\n    private onClick(x: number, y: number): void {\n        this.callback(x, y);\n    }\n\n    public redraw(): void {  // TODO: Need refactoring?\n        this.clickable_fields.resetAll();\n    }\n\n    public setClickable(position: [number, number], is_clickable: boolean): void {\n        this.clickable_fields.setClickable(position, is_clickable);\n    }\n\n    public setHighlight(position: [number, number], color: string): void {\n        this.clickable_fields.setHighlight(position, color);\n    }\n\n    public animateDiceResult(result: number, color: string): void {\n        this.clickable_fields.animateDiceResult(result, color);\n    }\n}\n\nexport class HtmlDeckCharView extends HtmlViewObject {\n    public callback: (i: number) => void;\n    readonly fields: HtmlViewObject[];\n    readonly clickables: HtmlClickableFieldView[];\n\n    constructor(element_id: string) {\n        super(document.getElementById(element_id));\n        this.fields = [];\n        this.clickables = [];\n        for (let i: number = 0; i < 5; ++i) {\n            let field: HtmlViewObject = new HtmlViewObject(document.getElementById(`${element_id}_${i}`));\n            this.fields.push(field);\n            let clickable: HtmlClickableFieldView = new HtmlClickableFieldView(`clickable_${element_id}_${i}`);\n            this.clickables.push(clickable);\n            clickable.addClickListener(() => { this.onClick(i); });\n        }\n    }\n\n    private onClick(i: number): void {\n        this.callback(i);\n    }\n\n    public setHighlight(i: number, highlight: boolean): void {\n        this.clickables[i].setClickable(highlight);\n    }\n\n    public drawCharacter(i: number, character: Character): void {\n        let value: string = \"\";\n        if (character != null) {\n            value = character.name;\n        }\n        this.fields[i].element.innerText = value;\n    }\n}\n\nexport class HtmlButtonView extends HtmlViewObject {\n    constructor(element_id: string) {\n        super(document.getElementById(element_id));\n    }\n\n    public setClickable(is_clickable: boolean): void {\n        // TODO: Use class of \"clickable\".\n        this.element.style.backgroundColor = is_clickable ? COLOR_CLICKABLE : COLOR_FIELD;\n    }\n}\n\nexport class HtmlButtonsView extends HtmlViewObject {\n    readonly dice1: HtmlButtonView;\n    readonly dice2: HtmlButtonView;\n    readonly char_card: HtmlButtonView;\n    readonly end_turn: HtmlButtonView;\n\n    constructor(readonly element_id: string, dice_widget: HtmlDiceView) {\n        super(document.getElementById(element_id));\n\n        this.dice1 = new HtmlButtonView(element_id + \"_dice1\");\n        let dice1_1: HtmlViewObject = dice_widget.clone();\n        dice1_1.element.id = \"buttons_dice1_1\";\n        let dice2_1: HtmlViewObject = dice_widget.clone();\n        dice2_1.element.id = \"buttons_dice2_1\";\n        let dice2_2: HtmlViewObject = dice_widget.clone();\n        dice2_2.element.id = \"buttons_dice2_2\";\n        this.dice2 = new HtmlButtonView(element_id + \"_dice2\");\n        this.dice1.element.appendChild(dice1_1.element);\n        this.dice2.element.appendChild(dice2_1.element);\n        this.dice2.element.appendChild(dice2_2.element);\n        this.char_card = new HtmlButtonView(element_id + \"_char_card\");\n        this.end_turn = new HtmlButtonView(element_id + \"_end_turn\");\n    }\n\n    public draw(session: Session, player_id: PlayerId): void {\n        if (session.getCurrentPlayerId() !== player_id) {\n            this.hide();\n            return;\n        }\n\n        this.dice1.hide();\n        this.dice2.hide();\n        this.char_card.hide();\n        this.end_turn.hide();\n\n        let phase: Phase = session.getPhase();\n        if (phase === Phase.CharacterCard || phase === Phase.DiceRoll) {\n            this.dice1.show();\n            this.dice2.show();\n        }\n\n        if (phase === Phase.CharacterCard) {\n            this.char_card.show();\n            this.char_card.setClickable(false);\n        }\n\n        if (phase === Phase.BuildFacility) {\n            this.end_turn.show();\n        }\n        this.show();\n    }\n}\n\nexport class HtmlClickableFieldView extends HtmlViewObject {\n    constructor(element_id: string) {\n        super(document.getElementById(element_id));\n    }\n\n    public reset(): void {\n        this.element.style.borderColor = \"transparent\";\n    }\n\n    public setClickable(is_clickable: boolean): void {\n        // TODO: Use class of \"clickable\".\n        this.element.style.borderColor = is_clickable ? COLOR_CLICKABLE : \"transparent\";\n    }\n\n    public setColor(color: string): void {\n        this.element.style.borderColor = color;\n    }\n}\n\nexport class HtmlClickableFieldsView extends HtmlViewObject {\n    readonly row: number;\n    readonly column: number;\n    readonly fields: HtmlClickableFieldView[][] = [];\n\n    constructor(element_id: string, row: number, column: number) {\n        super(document.getElementById(element_id));\n        this.row = row;\n        this.column = column;\n\n        for (let x: number = 0; x < column; ++x) {\n            this.fields.push([]);\n            for (let y: number = 0; y < row; ++y) {\n                this.fields[x].push(new HtmlClickableFieldView(`${element_id}_${x}_${y}`));\n            }\n        }\n    }\n\n    public resetAll(): void {\n        for (let x: number = 0; x < this.column; ++x) {\n            for (let y: number = 0; y < this.row; ++y) {\n                this.fields[x][y].reset();\n            }\n        }\n    }\n\n    public setClickableAreas(areas: number[]): void {\n        for (let area of areas) {\n            let x: number = area - 1;\n            for (let y: number = 0; y < this.row; ++y) {\n                this.fields[x][y].setClickable(true);\n            }\n        }\n    }\n\n    public setClickable([x, y]: [number, number], is_clickable: boolean): void {\n        this.fields[x][y].setClickable(is_clickable);\n    }\n\n    public setHighlight([x, y]: [number, number], color: string): void {\n        this.fields[x][y].setColor(color);\n    }\n\n    public animateDiceResult(pip: number, color: string): void {\n        let x: number = pip - 1;\n        let delay: number = 0;\n        for (let i: number = 0; i < this.row; ++i) {\n            let y = this.row - 1 - i;\n            window.setTimeout(() => {\n                this.fields[x][y].setColor(color);\n                window.setTimeout(() => {\n                    this.fields[x][y].setColor(\"transparent\"); }, 1500);\n            }, delay);\n            delay = delay + 10 * i;  // 0, 10, 30, 60, 100, ...\n        }\n    }\n}\n\nexport class HtmlDiceView extends HtmlViewObject {\n    constructor(readonly element_id: string) {\n        super(document.getElementById(element_id));\n    }\n}\n\nexport class HtmlChatButtonView extends HtmlViewObject {\n    public stamp_box: HtmlViewObject;\n    private stamps: HtmlViewObject[] = [];\n    private prev_stamps: { [element_id: string]: HtmlViewObject } = {};\n    public is_visible: boolean = false;\n    public callback: (index: number) => void = null;\n\n    constructor(readonly element_id: string, readonly stamp_box_id: string) {\n        super(document.getElementById(element_id));\n        this.stamp_box = new HtmlViewObject(document.getElementById(stamp_box_id));\n        this.stamp_box.none();\n\n        this.addClickListener(() => { this.toggleStampBox(); });\n\n        let stamp_elements = this.stamp_box.element.getElementsByClassName(\"stamp\");\n        for (let i: number = 0; i < stamp_elements.length; ++i) {\n            let stamp: HtmlViewObject = new HtmlViewObject(<HTMLElement>stamp_elements[i]);\n            stamp.addClickListener(() => {\n                if (this.callback) {\n                    this.callback(i);\n                }\n                this.showStampBox(false);\n            });\n            this.stamps.push(stamp);\n        }\n    }\n\n    public showStampAt(index: number, element_id: string): void {\n        let stamp: HtmlViewObject = this.stamps[index].clone();\n        stamp.show();\n        stamp.showAt(stamp.getPositionAlignedWithElementId(element_id));\n        window.setTimeout(() => {\n            if (this.prev_stamps[element_id] === stamp) {\n                delete this.prev_stamps[element_id];\n            }\n            stamp.remove();\n        }, 3000);\n\n        let prev_stamp: HtmlViewObject = this.prev_stamps[element_id];\n        if (prev_stamp) {\n            prev_stamp.none();\n        }\n        this.prev_stamps[element_id] = stamp;\n    }\n\n    private toggleStampBox(): void {\n        this.showStampBox(!this.is_visible);\n    }\n\n    private showStampBox(is_visible: boolean): void {\n        if (is_visible) {\n            this.is_visible = true;\n            this.stamp_box.show();\n            this.stamp_box.showAt(this.stamp_box.getPositionAlignedWithElementId(\"board\"));\n        }\n        else {\n            this.is_visible = false;\n            this.stamp_box.none();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/html_view_parts.ts","import { Connection, Client } from \"./client\";\nimport { StandaloneConnection } from \"./standalone_connection\";\nimport { WebClient } from \"./saikoro\";\n\nconst delay: number = 0;  // msec\nlet connection: Connection = new StandaloneConnection(delay);\n\nlet client: Client = new WebClient(connection);\ndocument.addEventListener(\"DOMContentLoaded\", () => { client.initBoard(); });\n\n\n\n// WEBPACK FOOTER //\n// ./src/saikoro_client_standalone.ts","import { Dice } from \"./dice\";\nimport { Session } from \"./session\";\nimport { Board, PlayerId } from \"./board\";\nimport { CardId, CardDataId, FacilityType, Facility, CardData } from \"./facility\";\nimport { AutoPlay } from \"./auto_play\";\nimport { GameMode, MatchingInfo, MatchingPlayerInfo, Protocol } from \"./protocol\";\nimport { KeyValue, Storage } from \"./storage\";\n\nexport class MatchedData {\n    constructor(\n        public matching_id: string = \"\",\n        public session_id: string = \"\",\n        public player_id: number = -1) {}\n}\n\nexport class SessionHandler {\n    constructor(readonly storage: Storage) {}\n\n    public doNext(session: Session): boolean {\n        let prev_step: number = session.getStep();\n\n        for (let i: number = 0; i < 100; ++i) {\n            let cont: boolean = session.doNext();\n            let new_step: number = session.getStep();\n            if (cont) {\n                prev_step = new_step;\n                continue;\n            }\n\n            if (session.getCurrentPlayer().isAuto()) {\n                cont = AutoPlay.play(session);\n                new_step = session.getStep();\n            }\n            if (cont) {\n                prev_step = new_step;\n                continue;\n            }\n\n            if (prev_step === new_step) {\n                break;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    public processCommand(session: Session, query): boolean {\n        if (query.command === \"board\") {\n            let step: number = Number(query.step);\n            if (step >= session.getStep()) {\n                // No update.\n                return false;\n            }\n        }\n\n        else if (query.command === \"character\") {\n            let player_id: PlayerId = Number(query.player_id);\n            let card_id: CardId = Number(query.card_id);\n            if (session.useCharacter(player_id, card_id)) {\n                // TODO: integrate buildFacility and doNext.\n                this.doNext(session);\n            }\n        }\n\n        else if (query.command === \"dice\") {\n            let player_id: PlayerId = Number(query.player_id);\n            let dice_num = Number(query.dice_num);\n            let aim = Number(query.aim);\n            if (session.diceRoll(player_id, dice_num, aim)) {\n                // TODO: integrate diceRoll and doNext.\n                this.doNext(session);\n            }\n        }\n\n        else if (query.command === \"build\") {\n            let player_id: PlayerId = Number(query.player_id);\n            let x: number = Number(query.x);\n            let y: number = Number(query.y);\n            let card_id: CardId = Number(query.card_id);\n            if (x != null && y != null && player_id != null && card_id != null) {\n                if (session.buildFacility(player_id, x, y, card_id)) {\n                    // TODO: integrate buildFacility and doNext.\n                    this.doNext(session);\n                }\n            }\n        }\n\n        else if (query.command === \"interact\") {\n            let player_id: PlayerId = Number(query.player_id);\n            let card_id: CardId = Number(query.card_id);\n            let target_player_id: PlayerId = Number(query.target_player_id);\n            if (session.interactFacilityAction(player_id, card_id, target_player_id)) {\n                // TODO: integrate interactFacilityAction and doNext.\n                this.doNext(session);\n            }\n        }\n\n        else if (query.command === \"quit\") {\n            const user_id: string = String(query.user_id);\n            if (session.quitGame(user_id)) {\n                this.doNext(session);\n            }\n        }\n\n        else if (query.command === \"watch\") {\n            const user_id: string = String(query.user_id);\n            session.addWatcher(user_id);\n        }\n\n        return true;\n    }\n\n    private getSessionKey(session_id: number): string {\n        return `session/session_${session_id}`;\n    }\n    private getMacthingKey(mode: GameMode): string {\n        // TODO: rename \"memcache\" and check the permission.\n        return `memcache/matching_${mode}`;\n    }\n\n    public handleCommand(query: any): Promise<KeyValue> {\n        const session_id = (query.session_id != undefined) ? Number(query.session_id) : -1;\n        const mode = Number(query.mode);\n        if (session_id === -1) {\n            // Quit from matching.\n            if (query.command === \"quit\") {\n                // TODO: rename \"memcache\" and check the permission.\n                let matching_key: string = this.getMacthingKey(mode);\n                return this.storage.deleteWithPromise(`${matching_key}/${query.user_id}`).then((data) => {\n                    return this.updateMatching(mode);\n                }).then((data) => {\n                    return new KeyValue(data.key, \"{}\");\n                });\n            }\n        }\n\n        let session_key: string = this.getSessionKey(session_id);\n        let session: Session;\n        let updated: boolean = false;\n        return this.storage.getWithPromise(session_key).then((data) => {\n            if (!data.value) {\n                return new KeyValue(data.key, \"{}\");\n            }\n            session = Session.fromJSON(JSON.parse(data.value));\n\n            let updated: boolean = this.processCommand(session, query);\n\n            if (session.isEnd()) {\n                this.closeSession(session);\n            }\n            if (!updated) {\n                return new KeyValue(data.key, \"{}\");\n            }\n            let session_json: string = JSON.stringify(session.toJSON());\n            return this.storage.setWithPromise(session_key, session_json);\n        });\n    }\n\n    private closeSession(session: Session): void {\n        for (let player of session.getPlayers()) {\n            this.storage.delete(`matched/${player.user_id}`);\n        }\n        this.storage.delete(`live/session_${session.session_id}`);\n        // TODO: Possible to delete \"session/session_id\" after 10mins?\n    }\n\n    private createSession(session_id: number, mode: GameMode, player_infos: any[]): Session {\n        let session: Session = new Session(session_id);\n        for (let info of player_infos) {\n            this.addNewPlayer(session, info.user_id, info.name, info.deck, false);\n        }\n\n        // Add NPC.\n        const NPC_NAMES = [\"ごましお\", \"グラ\", \"ヂータ\", \"エル\", \"茜\", \"ベリー\", \"兼石\", \"ハルカ\"];\n        const num_npc: number = Protocol.getNpcCount(mode);\n        for (let i: number = 0; i < num_npc; ++i) {\n            let npc_name: string = NPC_NAMES[Math.floor(Math.random() * NPC_NAMES.length)];\n            this.addNewPlayer(session, `${i}`, npc_name + \" (NPC)\", [], true);\n        }\n\n        session.startGame();\n        this.doNext(session);\n        return session;\n    }\n\n    // TODO: This is a quite hacky way for testing w/o considering any race conditions.\n    public handleMatching(query: any): Promise<KeyValue> {\n        let name: string = query.name;\n        let mode: GameMode = Number(query.mode);\n        let user_id: string = query.user_id;\n        let deck: number[] = [];\n        try {\n            let user_deck = JSON.parse(query.deck);\n            deck = user_deck;\n        } catch(e) {\n            // Invalid deck format. Ignore it.\n        }\n\n        const matching_key: string = this.getMacthingKey(mode);\n\n        let player_info: MatchingPlayerInfo = <MatchingPlayerInfo> {\n            user_id: user_id,\n            mode: mode,\n            name: name,\n            deck: deck,\n        };\n\n        return this.storage.setWithPromise(`${matching_key}/${user_id}`, player_info).then((data) => {\n            return this.updateMatching(mode);\n        });\n    }\n\n    public updateMatching(mode: GameMode): Promise<KeyValue> {\n        const matching_key: string = this.getMacthingKey(mode);\n        return this.storage.getWithPromise(matching_key).then((data) => {\n            let matching_player_infos: {[user_id: string]: MatchingPlayerInfo};\n            matching_player_infos = data.value ? data.value : {};\n            return this.processMatching(mode, matching_player_infos);\n        });\n    }\n\n    // TODO: This is a quite hacky way for testing w/o considering any race conditions.\n    public processMatching(mode: GameMode,\n                           matching_player_infos: {[user_id: string]: MatchingPlayerInfo}): Promise<KeyValue> {\n        let user_ids: string[] = Object.keys(matching_player_infos);\n        let names: string[] = [];\n\n        // The number of players is not enough.\n        const num_players: number = Protocol.getPlayerCount(mode);\n        if (user_ids.length === 0) {\n            return this.storage.deleteWithPromise(`live/matching_${mode}`);\n        }\n\n        if (user_ids.length < num_players) {\n            for (let user_id of user_ids) {\n                names.push(matching_player_infos[user_id].name);\n            }\n\n            const matching_info: MatchingInfo = <MatchingInfo>{\n                mode: mode,\n                session_id: -1,\n                player_names: names,\n                is_matched: false,\n            };\n            return this.storage.setWithPromise(`live/matching_${mode}`, matching_info);\n        }\n\n        let promises: Promise<KeyValue>[] = [];\n\n        promises.push(this.storage.deleteWithPromise(`live/matching_${mode}`));\n\n        // Create session.\n\n        // Update player info.\n        let matching_key: string = this.getMacthingKey(mode);\n        let player_infos: MatchingPlayerInfo[] = [];\n        for (let i: number = 0; i < num_players; ++i) {\n            const user_id: string = user_ids[i];\n            names.push(matching_player_infos[user_id].name);\n            player_infos.push(matching_player_infos[user_id]);\n            promises.push(this.storage.deleteWithPromise(`${matching_key}/${user_id}`));\n        }\n\n        // TODO: session_id should be exactly unique.\n        const session_id = new Date().getTime();  // Msec.\n        let session = this.createSession(session_id, mode, player_infos);\n        const session_key: string = this.getSessionKey(session_id);\n        const session_string: string = JSON.stringify(session.toJSON());\n        promises.push(this.storage.setWithPromise(session_key, session_string));\n\n        const matching_info: MatchingInfo = <MatchingInfo>{\n            mode: mode,\n            session_id: session_id,\n            player_names: names,\n            is_matched: true,\n        };\n\n        // Set matched/ data.\n        for (let player of session.getPlayers()) {\n            if (player.isAuto()) {\n                continue;\n            }\n            promises.push(this.storage.setWithPromise(`matched/${player.user_id}`, matching_info));\n        }\n\n        // Set live/ data.\n        promises.push(this.storage.setWithPromise(`live/session_${session_id}`, matching_info));\n        return Promise.all(promises).then((data) => {\n            // Return the last item (key: live/session_${session_id}).\n            return data[data.length - 1];\n        });\n    }\n\n    public addNewPlayer(session: Session, user_id: string, name: string,\n                        deck: number[], is_auto: boolean): PlayerId {\n        const player_id: PlayerId = session.addPlayer(user_id, name, 1200, 250, is_auto);\n\n        let num_facilities: number = 0;\n        let num_chars: number = 0;\n        deck = deck ? deck : [];\n        for (let data_id of deck) {\n            if (CardData.isFacility(data_id)) {\n                session.addFacility(player_id, data_id);\n                num_facilities++;\n                continue;\n            }\n            if (CardData.isCharacter(data_id)) {\n                if (num_chars <= 5) {\n                    session.addCharacter(player_id, data_id);\n                    num_chars++;\n                }\n                continue;\n            }\n        }\n\n        for (let i: number = num_facilities; i < 10; ++i) {\n            session.addFacility(player_id, CardData.getRandomFacilityDataId());\n        }\n\n        for (let i: number = num_chars; i < 2; ++i) {\n            session.addCharacter(player_id, CardData.getRandomCharacterDataId());\n        }\n\n        return player_id;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/session_handler.ts"],"sourceRoot":""}